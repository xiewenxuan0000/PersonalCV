{"ast":null,"code":"/*!\n* Proton v4.2.1\n* https://github.com/drawcall/Proton\n*\n* Copyright 2013-2020, A-JIE\n* Licensed under the MIT license\n* http://www.opensource.org/licenses/mit-license\n*\n*/\n!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : t.Proton = e();\n}(this, function () {\n  \"use strict\";\n\n  var e = 3.1415926,\n    s = {\n      PI: e,\n      PIx2: 2 * e,\n      PI_2: e / 2,\n      PI_180: e / 180,\n      N180_PI: 180 / e,\n      Infinity: -999,\n      isInfinity: function (t) {\n        return t === this.Infinity || t === 1 / 0;\n      },\n      randomAToB: function (t, e, i) {\n        return 2 < arguments.length && void 0 !== i && i ? Math.floor(Math.random() * (e - t)) + t : t + Math.random() * (e - t);\n      },\n      randomFloating: function (t, e, i) {\n        return this.randomAToB(t - e, t + e, i);\n      },\n      randomColor: function () {\n        return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).slice(-6);\n      },\n      randomZone: function () {},\n      floor: function (t, e) {\n        e = 1 < arguments.length && void 0 !== e ? e : 4, e = Math.pow(10, e);\n        return Math.floor(t * e) / e;\n      },\n      degreeTransform: function (t) {\n        return t * e / 180;\n      },\n      toColor16: function (t) {\n        return \"#\" + t.toString(16);\n      }\n    },\n    i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n    },\n    o = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    },\n    t = function (t, e, i) {\n      return e && a(t.prototype, e), i && a(t, i), t;\n    };\n  function a(t, e) {\n    for (var i = 0; i < e.length; i++) {\n      var a = e[i];\n      a.enumerable = a.enumerable || !1, a.configurable = !0, \"value\" in a && (a.writable = !0), Object.defineProperty(t, a.key, a);\n    }\n  }\n  function n(t, e, i) {\n    null === t && (t = Function.prototype);\n    var a = Object.getOwnPropertyDescriptor(t, e);\n    if (void 0 !== a) {\n      if (\"value\" in a) return a.value;\n      a = a.get;\n      return void 0 !== a ? a.call(i) : void 0;\n    }\n    if (null !== (t = Object.getPrototypeOf(t))) return n(t, e, i);\n  }\n  var r = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);\n    },\n    h = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" != typeof e && \"function\" != typeof e ? t : e;\n    },\n    l = (t(u, [{\n      key: \"getValue\",\n      value: function (t) {\n        t = 0 < arguments.length && void 0 !== t && t;\n        return this.isArray ? P.getRandFromArray(this.a) : this.center ? s.randomFloating(this.a, this.b, t) : s.randomAToB(this.a, this.b, t);\n      }\n    }], [{\n      key: \"setSpanValue\",\n      value: function (t, e, i) {\n        return t instanceof u ? t : void 0 === e ? new u(t) : void 0 === i ? new u(t, e) : new u(t, e, i);\n      }\n    }, {\n      key: \"getSpanValue\",\n      value: function (t) {\n        return t instanceof u ? t.getValue() : t;\n      }\n    }]), u);\n  function u(t, e, i) {\n    o(this, u), P.isArray(t) ? (this.isArray = !0, this.a = t) : (this.isArray = !1, this.a = P.initValue(t, 1), this.b = P.initValue(e, this.a), this.center = P.initValue(i, !1));\n  }\n  var c = function (t) {\n      --t;\n      for (var e = 1; e < 32; e <<= 1) t |= t >> e;\n      return t + 1;\n    },\n    d = function (t, e) {\n      return [1, 0, 0, 0, 1, 0, t, e, 1];\n    },\n    y = function (t) {\n      var e = Math.cos(t),\n        t = Math.sin(t);\n      return [e, -t, 0, t, e, 0, 0, 0, 1];\n    },\n    p = function (t, e) {\n      return [t, 0, 0, 0, e, 0, 0, 0, 1];\n    },\n    f = function (t, e) {\n      var i = t[0],\n        a = t[1],\n        r = t[2],\n        n = t[3],\n        s = t[4],\n        o = t[5],\n        h = t[6],\n        l = t[7],\n        u = t[8],\n        c = e[0],\n        d = e[1],\n        y = e[2],\n        p = e[3],\n        f = e[4],\n        v = e[5],\n        g = e[6],\n        t = e[7],\n        e = e[8];\n      return [i * c + a * p + r * g, i * d + a * f + r * t, i * y + a * v + r * e, n * c + s * p + o * g, n * d + s * f + o * t, n * y + s * v + o * e, h * c + l * p + u * g, h * d + l * f + u * t, h * y + l * v + u * e];\n    },\n    v = {\n      createCanvas: function (t, e, i, a) {\n        var r = 3 < arguments.length && void 0 !== a ? a : \"absolute\",\n          a = document.createElement(\"canvas\");\n        return a.id = t, a.width = e, a.height = i, a.style.opacity = 0, a.style.position = r, this.transform(a, -500, -500, 0, 0), a;\n      },\n      createDiv: function (t, e, i) {\n        var a = document.createElement(\"div\");\n        return a.id = t, a.style.position = \"absolute\", this.resize(a, e, i), a;\n      },\n      resize: function (t, e, i) {\n        t.style.width = e + \"px\", t.style.height = i + \"px\", t.style.marginLeft = -e / 2 + \"px\", t.style.marginTop = -i / 2 + \"px\";\n      },\n      transform: function (t, e, i, a, r) {\n        t.style.willChange = \"transform\";\n        var n = \"translate(\" + e + \"px, \" + i + \"px) scale(\" + a + \") rotate(\" + r + \"deg)\";\n        this.css3(t, \"transform\", n);\n      },\n      transform3d: function (t, e, i, a, r) {\n        t.style.willChange = \"transform\";\n        r = \"translate3d(\" + e + \"px, \" + i + \"px, 0) scale(\" + a + \") rotate(\" + r + \"deg)\";\n        this.css3(t, \"backfaceVisibility\", \"hidden\"), this.css3(t, \"transform\", r);\n      },\n      css3: function (t, e, i) {\n        var a = e.charAt(0).toUpperCase() + e.substr(1);\n        t.style[\"Webkit\" + a] = i, t.style[\"Moz\" + a] = i, t.style[\"O\" + a] = i, t.style[\"ms\" + a] = i, t.style[\"\" + e] = i;\n      }\n    },\n    g = {},\n    m = {},\n    b = 0,\n    _ = function (t, e, i) {\n      t.drawImage(e, i.x, i.y);\n      e = t.getImageData(i.x, i.y, i.width, i.height);\n      return t.clearRect(i.x, i.y, i.width, i.height), e;\n    },\n    x = function (t, e, i) {\n      var a = \"string\" == typeof t ? t : t.src;\n      g[a] ? e(g[a], i) : ((t = new Image()).onload = function (t) {\n        g[a] = t.target, e(g[a], i);\n      }, t.src = a);\n    },\n    k = function (t, e, i) {\n      var a,\n        r,\n        n = t.src;\n      return m[n] || (a = c(t.width), r = c(t.height), (r = v.createCanvas(\"proton_canvas_cache_\" + ++b, a, r)).getContext(\"2d\").drawImage(t, 0, 0, t.width, t.height), m[n] = r), e && e(m[n], i), m[n];\n    },\n    P = {\n      initValue: function (t, e) {\n        return t = null != t ? t : e;\n      },\n      isArray: function (t) {\n        return \"[object Array]\" === Object.prototype.toString.call(t);\n      },\n      emptyArray: function (t) {\n        t && (t.length = 0);\n      },\n      toArray: function (t) {\n        return this.isArray(t) ? t : [t];\n      },\n      getRandFromArray: function (t) {\n        return t ? t[Math.floor(t.length * Math.random())] : null;\n      },\n      emptyObject: function (t, e) {\n        var i,\n          a = 1 < arguments.length && void 0 !== e ? e : null;\n        for (i in t) a && -1 < a.indexOf(i) || delete t[i];\n      },\n      classApply: function (t, e) {\n        e = 1 < arguments.length && void 0 !== e ? e : null;\n        return new (e ? t.bind.apply(t, [null].concat(e)) : t)();\n      },\n      setVectorVal: function (t, e) {\n        e = 1 < arguments.length && void 0 !== e ? e : null;\n        e && (this.hasProp(e, \"x\") && (t.p.x = e.x), this.hasProp(e, \"y\") && (t.p.y = e.y), this.hasProp(e, \"vx\") && (t.v.x = e.vx), this.hasProp(e, \"vy\") && (t.v.y = e.vy), this.hasProp(e, \"ax\") && (t.a.x = e.ax), this.hasProp(e, \"ay\") && (t.a.y = e.ay), this.hasProp(e, \"p\") && t.p.copy(e.p), this.hasProp(e, \"v\") && t.v.copy(e.v), this.hasProp(e, \"a\") && t.a.copy(e.a), this.hasProp(e, \"position\") && t.p.copy(e.position), this.hasProp(e, \"velocity\") && t.v.copy(e.velocity), this.hasProp(e, \"accelerate\") && t.a.copy(e.accelerate));\n      },\n      hasProp: function (t, e) {\n        return !!t && void 0 !== t[e];\n      },\n      setProp: function (t, e) {\n        for (var i in e) t.hasOwnProperty(i) && (t[i] = l.getSpanValue(e[i]));\n        return t;\n      },\n      getImageData: function (t, e, i) {\n        return _(t, e, i);\n      },\n      destroyAll: function (t, e) {\n        for (var i = 1 < arguments.length && void 0 !== e ? e : null, a = t.length; a--;) {\n          try {\n            t[a].destroy(i);\n          } catch (t) {}\n          delete t[a];\n        }\n        t.length = 0;\n      },\n      assign: function (t, e) {\n        if (\"function\" == typeof Object.assign) return Object.assign(t, e);\n        for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);\n        return t;\n      }\n    },\n    E = {},\n    A = {\n      _index: 0,\n      _cache: {},\n      id: function (t) {\n        return void 0 !== E[t] && null !== E[t] || (E[t] = 0), t + \"_\" + E[t]++;\n      },\n      getId: function (t) {\n        var e = this.getIdFromCache(t);\n        return e || (e = \"PUID_\" + this._index++, this._cache[e] = t, e);\n      },\n      getIdFromCache: function (t) {\n        var e,\n          i = void 0;\n        for (i in this._cache) {\n          if ((e = this._cache[i]) === t) return i;\n          if (this.isBody(e, t) && e.src === t.src) return i;\n        }\n        return null;\n      },\n      isBody: function (t, e) {\n        return \"object\" === (void 0 === t ? \"undefined\" : i(t)) && \"object\" === (void 0 === e ? \"undefined\" : i(e)) && t.isInner && e.isInner;\n      },\n      getTarget: function (t) {\n        return this._cache[t];\n      }\n    },\n    T = (t(R, [{\n      key: \"get\",\n      value: function (t, e, i) {\n        var a = void 0;\n        return i = i || t.__puid || A.getId(t), (a = this.cache[i] && 0 < this.cache[i].length ? this.cache[i].pop() : this.createOrClone(t, e)).__puid = t.__puid || i, a;\n      }\n    }, {\n      key: \"expire\",\n      value: function (t) {\n        return this.getCache(t.__puid).push(t);\n      }\n    }, {\n      key: \"createOrClone\",\n      value: function (t, e) {\n        return this.total++, this.create ? this.create(t, e) : \"function\" == typeof t ? P.classApply(t, e) : t.clone();\n      }\n    }, {\n      key: \"getCount\",\n      value: function () {\n        var t,\n          e = 0;\n        for (t in this.cache) e += this.cache[t].length;\n        return e++;\n      }\n    }, {\n      key: \"destroy\",\n      value: function () {\n        for (var t in this.cache) this.cache[t].length = 0, delete this.cache[t];\n      }\n    }, {\n      key: \"getCache\",\n      value: function (t) {\n        t = 0 < arguments.length && void 0 !== t ? t : \"default\";\n        return this.cache[t] || (this.cache[t] = []), this.cache[t];\n      }\n    }]), R);\n  function R(t) {\n    o(this, R), this.total = 0, this.cache = {};\n  }\n  var O = (t(w, [{\n    key: \"update\",\n    value: function (t, e) {\n      this.add(t, e);\n      var i = this.getEmitter(),\n        t = this.getRenderer(),\n        e = \"\";\n      switch (this.type) {\n        case 2:\n          e += \"emitter:\" + this.proton.emitters.length + \"<br>\", i && (e += \"em speed:\" + i.emitSpeed + \"<br>\"), i && (e += \"pos:\" + this.getEmitterPos(i));\n          break;\n        case 3:\n          i && (e += \"initializes:\" + i.initializes.length + \"<br>\"), i && (e += '<span style=\"display:inline-block;\">' + this.concatArr(i.initializes) + \"</span><br>\"), i && (e += \"behaviours:\" + i.behaviours.length + \"<br>\"), i && (e += '<span style=\"display:inline-block;\">' + this.concatArr(i.behaviours) + \"</span><br>\");\n          break;\n        case 4:\n          t && (e += t.name + \"<br>\"), t && (e += \"body:\" + this.getCreatedNumber(t) + \"<br>\");\n          break;\n        default:\n          e += \"particles:\" + this.proton.getCount() + \"<br>\", e += \"pool:\" + this.proton.pool.getCount() + \"<br>\", e += \"total:\" + this.proton.pool.total;\n      }\n      this.container.innerHTML = e;\n    }\n  }, {\n    key: \"add\",\n    value: function (t, e) {\n      var i = this;\n      if (!this.container) {\n        this.type = 1, this.container = document.createElement(\"div\"), this.container.style.cssText = [\"position:absolute;bottom:0px;left:0;cursor:pointer;\", \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\", \"width:120px;height:50px;background-color:#002;color:#0ff;\"].join(\"\"), this.container.addEventListener(\"click\", function (t) {\n          i.type++, 4 < i.type && (i.type = 1);\n        }, !1);\n        var a = void 0,\n          r = void 0;\n        switch (t) {\n          case 2:\n            a = \"#201\", r = \"#f08\";\n            break;\n          case 3:\n            a = \"#020\", r = \"#0f0\";\n            break;\n          default:\n            a = \"#002\", r = \"#0ff\";\n        }\n        this.container.style[\"background-color\"] = a, this.container.style.color = r;\n      }\n      this.container.parentNode || (e = e || this.body || document.body).appendChild(this.container);\n    }\n  }, {\n    key: \"getEmitter\",\n    value: function () {\n      return this.proton.emitters[this.emitterIndex];\n    }\n  }, {\n    key: \"getRenderer\",\n    value: function () {\n      return this.proton.renderers[this.rendererIndex];\n    }\n  }, {\n    key: \"concatArr\",\n    value: function (t) {\n      var e = \"\";\n      if (!t || !t.length) return e;\n      for (var i = 0; i < t.length; i++) e += (t[i].name || \"\").substr(0, 1) + \".\";\n      return e;\n    }\n  }, {\n    key: \"getCreatedNumber\",\n    value: function (t) {\n      return t.pool.total || t.cpool && t.cpool.total || 0;\n    }\n  }, {\n    key: \"getEmitterPos\",\n    value: function (t) {\n      return Math.round(t.p.x) + \",\" + Math.round(t.p.y);\n    }\n  }]), w);\n  function w(t) {\n    o(this, w), this.proton = t, this.container = null, this.type = 1, this.emitterIndex = 0, this.rendererIndex = 0;\n  }\n  var C = (t(S, [{\n    key: \"addEventListener\",\n    value: function (t, e) {\n      return this._listeners ? this.removeEventListener(t, e) : this._listeners = {}, this._listeners[t] || (this._listeners[t] = []), this._listeners[t].push(e), e;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function (t, e) {\n      if (this._listeners && this._listeners[t]) for (var i = this._listeners[t], a = i.length, r = 0; r < a; r++) if (i[r] === e) {\n        1 === a ? delete this._listeners[t] : i.splice(r, 1);\n        break;\n      }\n    }\n  }, {\n    key: \"removeAllEventListeners\",\n    value: function (t) {\n      t ? this._listeners && delete this._listeners[t] : this._listeners = null;\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function (t, e) {\n      var i = !1,\n        a = this._listeners;\n      if (t && a) {\n        var r = a[t];\n        if (!r) return i;\n        for (var n = void 0, s = r.length; s--;) n = r[s], i = i || n(e);\n      }\n      return !!i;\n    }\n  }, {\n    key: \"hasEventListener\",\n    value: function (t) {\n      var e = this._listeners;\n      return !(!e || !e[t]);\n    }\n  }], [{\n    key: \"bind\",\n    value: function (t) {\n      t.prototype.dispatchEvent = S.prototype.dispatchEvent, t.prototype.hasEventListener = S.prototype.hasEventListener, t.prototype.addEventListener = S.prototype.addEventListener, t.prototype.removeEventListener = S.prototype.removeEventListener, t.prototype.removeAllEventListeners = S.prototype.removeAllEventListeners;\n    }\n  }]), S);\n  function S() {\n    o(this, S), this._listeners = null;\n  }\n  var I = (t(D, [{\n    key: \"calculate\",\n    value: function (t, e, i) {\n      this.eulerIntegrate(t, e, i);\n    }\n  }, {\n    key: \"eulerIntegrate\",\n    value: function (t, e, i) {\n      t.sleep || (t.old.p.copy(t.p), t.old.v.copy(t.v), t.a.multiplyScalar(1 / t.mass), t.v.add(t.a.multiplyScalar(e)), t.p.add(t.old.v.multiplyScalar(e)), i && t.v.multiplyScalar(i), t.a.clear());\n    }\n  }]), D);\n  function D(t) {\n    o(this, D), this.type = t;\n  }\n  var V = (t(M, [{\n    key: \"addRenderer\",\n    value: function (t) {\n      t.init(this), this.renderers.push(t);\n    }\n  }, {\n    key: \"removeRenderer\",\n    value: function (t) {\n      var e = this.renderers.indexOf(t);\n      this.renderers.splice(e, 1), t.remove(this);\n    }\n  }, {\n    key: \"addEmitter\",\n    value: function (t) {\n      this.emitters.push(t), (t.parent = this).dispatchEvent(M.EMITTER_ADDED, t);\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function (t) {\n      var e = this.emitters.indexOf(t);\n      this.emitters.splice(e, 1), t.parent = null, this.dispatchEvent(M.EMITTER_REMOVED, t);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      \"auto\" === this._fps ? (this.dispatchEvent(M.PROTON_UPDATE), M.USE_CLOCK ? (this.then || (this.then = new Date().getTime()), this.now = new Date().getTime(), this.elapsed = .001 * (this.now - this.then), this.amendChangeTabsBug(), 0 < this.elapsed && this.emittersUpdate(this.elapsed), this.then = this.now) : this.emittersUpdate(M.DEFAULT_INTERVAL), this.dispatchEvent(M.PROTON_UPDATE_AFTER)) : (this.then || (this.then = new Date().getTime()), this.now = new Date().getTime(), this.elapsed = .001 * (this.now - this.then), this.elapsed > this._interval && (this.dispatchEvent(M.PROTON_UPDATE), this.emittersUpdate(this._interval), this.then = this.now - this.elapsed % this._interval * 1e3, this.dispatchEvent(M.PROTON_UPDATE_AFTER)));\n    }\n  }, {\n    key: \"emittersUpdate\",\n    value: function (t) {\n      for (var e = this.emitters.length; e--;) this.emitters[e].update(t);\n    }\n  }, {\n    key: \"amendChangeTabsBug\",\n    value: function () {\n      M.amendChangeTabsBug && .5 < this.elapsed && (this.then = new Date().getTime(), this.elapsed = 0);\n    }\n  }, {\n    key: \"getCount\",\n    value: function () {\n      for (var t = 0, e = this.emitters.length; e--;) t += this.emitters[e].particles.length;\n      return t;\n    }\n  }, {\n    key: \"getAllParticles\",\n    value: function () {\n      for (var t = [], e = this.emitters.length; e--;) t = t.concat(this.emitters[e].particles);\n      return t;\n    }\n  }, {\n    key: \"destroyAllEmitters\",\n    value: function () {\n      P.destroyAll(this.emitters);\n    }\n  }, {\n    key: \"destroy\",\n    value: function (t) {\n      function e() {\n        i.time = 0, i.then = 0, i.pool.destroy(), P.destroyAll(i.emitters), P.destroyAll(i.renderers, i.getAllParticles());\n      }\n      var i = this;\n      0 < arguments.length && void 0 !== t && t ? setTimeout(e, 200) : e();\n    }\n  }, {\n    key: \"fps\",\n    set: function (t) {\n      this._fps = t, this._interval = \"auto\" === t ? M.DEFAULT_INTERVAL : s.floor(1 / t, 7);\n    },\n    get: function () {\n      return this._fps;\n    }\n  }]), M);\n  function M(t) {\n    o(this, M), this.emitters = [], this.renderers = [], this.time = 0, this.now = 0, this.then = 0, this.elapsed = 0, this.stats = new O(this), this.pool = new T(80), this.integrationType = P.initValue(t, M.EULER), this.integrator = new I(this.integrationType), this._fps = \"auto\", this._interval = M.DEFAULT_INTERVAL;\n  }\n  V.USE_CLOCK = !1, V.MEASURE = 100, V.EULER = \"euler\", V.RK2 = \"runge-kutta2\", V.PARTICLE_CREATED = \"PARTICLE_CREATED\", V.PARTICLE_UPDATE = \"PARTICLE_UPDATE\", V.PARTICLE_SLEEP = \"PARTICLE_SLEEP\", V.PARTICLE_DEAD = \"PARTICLE_DEAD\", V.EMITTER_ADDED = \"EMITTER_ADDED\", V.EMITTER_REMOVED = \"EMITTER_REMOVED\", V.PROTON_UPDATE = \"PROTON_UPDATE\", V.PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\", V.DEFAULT_INTERVAL = .0167, V.amendChangeTabsBug = !0, C.bind(V);\n  var B = (t(L, [{\n    key: \"reset\",\n    value: function () {\n      this.r = 255, this.g = 255, this.b = 255;\n    }\n  }]), L);\n  function L() {\n    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 255,\n      e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 255,\n      i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 255;\n    o(this, L), this.r = t, this.g = e, this.b = i;\n  }\n  var U = {\n      easeLinear: function (t) {\n        return t;\n      },\n      easeInQuad: function (t) {\n        return Math.pow(t, 2);\n      },\n      easeOutQuad: function (t) {\n        return -(Math.pow(t - 1, 2) - 1);\n      },\n      easeInOutQuad: function (t) {\n        return (t /= .5) < 1 ? .5 * Math.pow(t, 2) : -.5 * ((t -= 2) * t - 2);\n      },\n      easeInCubic: function (t) {\n        return Math.pow(t, 3);\n      },\n      easeOutCubic: function (t) {\n        return Math.pow(t - 1, 3) + 1;\n      },\n      easeInOutCubic: function (t) {\n        return (t /= .5) < 1 ? .5 * Math.pow(t, 3) : .5 * (Math.pow(t - 2, 3) + 2);\n      },\n      easeInQuart: function (t) {\n        return Math.pow(t, 4);\n      },\n      easeOutQuart: function (t) {\n        return -(Math.pow(t - 1, 4) - 1);\n      },\n      easeInOutQuart: function (t) {\n        return (t /= .5) < 1 ? .5 * Math.pow(t, 4) : -.5 * ((t -= 2) * Math.pow(t, 3) - 2);\n      },\n      easeInSine: function (t) {\n        return 1 - Math.cos(t * s.PI_2);\n      },\n      easeOutSine: function (t) {\n        return Math.sin(t * s.PI_2);\n      },\n      easeInOutSine: function (t) {\n        return -.5 * (Math.cos(Math.PI * t) - 1);\n      },\n      easeInExpo: function (t) {\n        return 0 === t ? 0 : Math.pow(2, 10 * (t - 1));\n      },\n      easeOutExpo: function (t) {\n        return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);\n      },\n      easeInOutExpo: function (t) {\n        return 0 === t ? 0 : 1 === t ? 1 : (t /= .5) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * --t));\n      },\n      easeInCirc: function (t) {\n        return -(Math.sqrt(1 - t * t) - 1);\n      },\n      easeOutCirc: function (t) {\n        return Math.sqrt(1 - Math.pow(t - 1, 2));\n      },\n      easeInOutCirc: function (t) {\n        return (t /= .5) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n      },\n      easeInBack: function (t) {\n        return t * t * (2.70158 * t - 1.70158);\n      },\n      easeOutBack: function (t) {\n        return --t * t * (2.70158 * t + 1.70158) + 1;\n      },\n      easeInOutBack: function (t) {\n        var e = 1.70158;\n        return (t /= .5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);\n      },\n      getEasing: function (t) {\n        return \"function\" == typeof t ? t : this[t] || this.easeLinear;\n      }\n    },\n    F = (t(z, [{\n      key: \"set\",\n      value: function (t, e) {\n        return this.x = t, this.y = e, this;\n      }\n    }, {\n      key: \"setX\",\n      value: function (t) {\n        return this.x = t, this;\n      }\n    }, {\n      key: \"setY\",\n      value: function (t) {\n        return this.y = t, this;\n      }\n    }, {\n      key: \"getGradient\",\n      value: function () {\n        return 0 !== this.x ? Math.atan2(this.y, this.x) : 0 < this.y ? s.PI_2 : this.y < 0 ? -s.PI_2 : void 0;\n      }\n    }, {\n      key: \"copy\",\n      value: function (t) {\n        return this.x = t.x, this.y = t.y, this;\n      }\n    }, {\n      key: \"add\",\n      value: function (t, e) {\n        return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x, this.y += t.y, this);\n      }\n    }, {\n      key: \"addXY\",\n      value: function (t, e) {\n        return this.x += t, this.y += e, this;\n      }\n    }, {\n      key: \"addVectors\",\n      value: function (t, e) {\n        return this.x = t.x + e.x, this.y = t.y + e.y, this;\n      }\n    }, {\n      key: \"sub\",\n      value: function (t, e) {\n        return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x, this.y -= t.y, this);\n      }\n    }, {\n      key: \"subVectors\",\n      value: function (t, e) {\n        return this.x = t.x - e.x, this.y = t.y - e.y, this;\n      }\n    }, {\n      key: \"divideScalar\",\n      value: function (t) {\n        return 0 !== t ? (this.x /= t, this.y /= t) : this.set(0, 0), this;\n      }\n    }, {\n      key: \"multiplyScalar\",\n      value: function (t) {\n        return this.x *= t, this.y *= t, this;\n      }\n    }, {\n      key: \"negate\",\n      value: function () {\n        return this.multiplyScalar(-1);\n      }\n    }, {\n      key: \"dot\",\n      value: function (t) {\n        return this.x * t.x + this.y * t.y;\n      }\n    }, {\n      key: \"lengthSq\",\n      value: function () {\n        return this.x * this.x + this.y * this.y;\n      }\n    }, {\n      key: \"length\",\n      value: function () {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      }\n    }, {\n      key: \"normalize\",\n      value: function () {\n        return this.divideScalar(this.length());\n      }\n    }, {\n      key: \"distanceTo\",\n      value: function (t) {\n        return Math.sqrt(this.distanceToSquared(t));\n      }\n    }, {\n      key: \"rotate\",\n      value: function (t) {\n        var e = this.x,\n          i = this.y;\n        return this.x = e * Math.cos(t) + i * Math.sin(t), this.y = -e * Math.sin(t) + i * Math.cos(t), this;\n      }\n    }, {\n      key: \"distanceToSquared\",\n      value: function (t) {\n        var e = this.x - t.x,\n          t = this.y - t.y;\n        return e * e + t * t;\n      }\n    }, {\n      key: \"lerp\",\n      value: function (t, e) {\n        return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this;\n      }\n    }, {\n      key: \"equals\",\n      value: function (t) {\n        return t.x === this.x && t.y === this.y;\n      }\n    }, {\n      key: \"clear\",\n      value: function () {\n        return this.x = 0, this.y = 0, this;\n      }\n    }, {\n      key: \"clone\",\n      value: function () {\n        return new z(this.x, this.y);\n      }\n    }]), z);\n  function z(t, e) {\n    o(this, z), this.x = t || 0, this.y = e || 0;\n  }\n  var j = (t(N, [{\n    key: \"getDirection\",\n    value: function () {\n      return Math.atan2(this.v.x, -this.v.y) * s.N180_PI;\n    }\n  }, {\n    key: \"reset\",\n    value: function () {\n      return this.life = 1 / 0, this.age = 0, this.dead = !1, this.sleep = !1, this.body = null, this.sprite = null, this.parent = null, this.energy = 1, this.mass = 1, this.radius = 10, this.alpha = 1, this.scale = 1, this.rotation = 0, this.color = null, this.p.set(0, 0), this.v.set(0, 0), this.a.set(0, 0), this.old.p.set(0, 0), this.old.v.set(0, 0), this.old.a.set(0, 0), this.easing = U.easeLinear, this.rgb.reset(), P.emptyObject(this.data), this.removeAllBehaviours(), this;\n    }\n  }, {\n    key: \"update\",\n    value: function (t, e) {\n      this.sleep || (this.age += t, this.applyBehaviours(t, e)), this.age < this.life ? (e = this.easing(this.age / this.life), this.energy = Math.max(1 - e, 0)) : this.destroy();\n    }\n  }, {\n    key: \"applyBehaviours\",\n    value: function (t, e) {\n      for (var i = this.behaviours.length, a = void 0, a = 0; a < i; a++) this.behaviours[a] && this.behaviours[a].applyBehaviour(this, t, e);\n    }\n  }, {\n    key: \"addBehaviour\",\n    value: function (t) {\n      this.behaviours.push(t), t.hasOwnProperty(\"parents\") && t.parents.push(this), t.initialize(this);\n    }\n  }, {\n    key: \"addBehaviours\",\n    value: function (t) {\n      for (var e = t.length, i = void 0, i = 0; i < e; i++) this.addBehaviour(t[i]);\n    }\n  }, {\n    key: \"removeBehaviour\",\n    value: function (t) {\n      t = this.behaviours.indexOf(t);\n      -1 < t && (this.behaviours.splice(t, 1).parents = null);\n    }\n  }, {\n    key: \"removeAllBehaviours\",\n    value: function () {\n      P.emptyArray(this.behaviours);\n    }\n  }, {\n    key: \"destroy\",\n    value: function () {\n      this.removeAllBehaviours(), this.energy = 0, this.dead = !0, this.parent = null;\n    }\n  }]), N);\n  function N(t) {\n    o(this, N), this.id = \"\", this.old = {}, this.data = {}, this.behaviours = [], this.p = [], this.v = [], this.a = [], this.rgb = {}, this.name = \"Particle\", this.id = A.id(this.name), this.old = {}, this.data = {}, this.behaviours = [], this.p = new F(), this.v = new F(), this.a = new F(), this.old.p = new F(), this.old.v = new F(), this.old.a = new F(), this.rgb = new B(), this.reset(), t && P.setProp(this, t);\n  }\n  var H = {\n      hexToRgb: function (t) {\n        t = \"#\" === t.charAt(0) ? t.substring(1, 7) : t;\n        return {\n          r: parseInt(t.substring(0, 2), 16),\n          g: parseInt(t.substring(2, 4), 16),\n          b: parseInt(t.substring(4, 6), 16)\n        };\n      },\n      rgbToHex: function (t) {\n        return \"rgb(\" + t.r + \", \" + t.g + \", \" + t.b + \")\";\n      },\n      getHex16FromParticle: function (t) {\n        return 65536 * Number(t.rgb.r) + 256 * Number(t.rgb.g) + Number(t.rgb.b);\n      }\n    },\n    q = (t(G, [{\n      key: \"set\",\n      value: function (t, e) {\n        return this.r = t, this.tha = e, this;\n      }\n    }, {\n      key: \"setR\",\n      value: function (t) {\n        return this.r = t, this;\n      }\n    }, {\n      key: \"setTha\",\n      value: function (t) {\n        return this.tha = t, this;\n      }\n    }, {\n      key: \"copy\",\n      value: function (t) {\n        return this.r = t.r, this.tha = t.tha, this;\n      }\n    }, {\n      key: \"toVector\",\n      value: function () {\n        return new F(this.getX(), this.getY());\n      }\n    }, {\n      key: \"getX\",\n      value: function () {\n        return this.r * Math.sin(this.tha);\n      }\n    }, {\n      key: \"getY\",\n      value: function () {\n        return -this.r * Math.cos(this.tha);\n      }\n    }, {\n      key: \"normalize\",\n      value: function () {\n        return this.r = 1, this;\n      }\n    }, {\n      key: \"equals\",\n      value: function (t) {\n        return t.r === this.r && t.tha === this.tha;\n      }\n    }, {\n      key: \"clear\",\n      value: function () {\n        return this.r = 0, this.tha = 0, this;\n      }\n    }, {\n      key: \"clone\",\n      value: function () {\n        return new G(this.r, this.tha);\n      }\n    }]), G);\n  function G(t, e) {\n    o(this, G), this.r = Math.abs(t) || 0, this.tha = e || 0;\n  }\n  var X = {\n      create: function (t) {\n        var e = new Float32Array(9);\n        return t && this.set(t, e), e;\n      },\n      set: function (t, e) {\n        for (var i = 0; i < 9; i++) e[i] = t[i];\n        return e;\n      },\n      multiply: function (t, e, i) {\n        var a = t[0],\n          r = t[1],\n          n = t[2],\n          s = t[3],\n          o = t[4],\n          h = t[6],\n          l = t[7],\n          u = e[0],\n          c = e[1],\n          d = e[2],\n          y = e[3],\n          p = e[4],\n          t = e[6],\n          e = e[7];\n        return i[0] = u * a + c * s, i[1] = u * r + c * o, i[2] = n * d, i[3] = y * a + p * s, i[4] = y * r + p * o, i[6] = t * a + e * s + h, i[7] = t * r + e * o + l, i;\n      },\n      inverse: function (t, e) {\n        var i = t[0],\n          a = t[1],\n          r = t[3],\n          n = t[4],\n          s = t[6],\n          o = t[7],\n          h = -r,\n          t = o * r - n * s,\n          r = 1 / (i * n + a * h);\n        return e[0] = n * r, e[1] = -a * r, e[3] = h * r, e[4] = i * r, e[6] = t * r, e[7] = (-o * i + a * s) * r, e;\n      },\n      multiplyVec2: function (t, e, i) {\n        var a = e[0],\n          e = e[1];\n        return i[0] = a * t[0] + e * t[3] + t[6], i[1] = a * t[1] + e * t[4] + t[7], i;\n      }\n    },\n    Y = (r(W, l), t(W, [{\n      key: \"getValue\",\n      value: function () {\n        var t = P.getRandFromArray(this._arr);\n        return \"random\" === t || \"Random\" === t ? s.randomColor() : t;\n      }\n    }], [{\n      key: \"createArraySpan\",\n      value: function (t) {\n        return t ? t instanceof W ? t : new W(t) : null;\n      }\n    }]), W);\n  function W(t) {\n    o(this, W);\n    var e = h(this, (W.__proto__ || Object.getPrototypeOf(W)).call(this));\n    return e._arr = P.toArray(t), e;\n  }\n  var Z = (t(Q, [{\n    key: \"contains\",\n    value: function (t, e) {\n      return t <= this.right && t >= this.x && e <= this.bottom && e >= this.y;\n    }\n  }]), Q);\n  function Q(t, e, i, a) {\n    o(this, Q), this.x = t, this.y = e, this.width = i, this.height = a, this.bottom = this.y + this.height, this.right = this.x + this.width;\n  }\n  var K = (t(J, [{\n    key: \"init\",\n    value: function () {\n      this.startTime = 0, this.nextTime = this.timePan.getValue();\n    }\n  }, {\n    key: \"getValue\",\n    value: function (t) {\n      return this.startTime += t, this.startTime >= this.nextTime ? (this.startTime = 0, this.nextTime = this.timePan.getValue(), 1 === this.numPan.b ? .5 < this.numPan.getValue(!1) ? 1 : 0 : this.numPan.getValue(!0)) : 0;\n    }\n  }]), J);\n  function J(t, e) {\n    o(this, J), this.numPan = l.setSpanValue(P.initValue(t, 1)), this.timePan = l.setSpanValue(P.initValue(e, 1)), this.startTime = 0, this.nextTime = 0, this.init();\n  }\n  var $ = (t(tt, [{\n    key: \"reset\",\n    value: function () {}\n  }, {\n    key: \"init\",\n    value: function (t, e) {\n      e ? this.initialize(e) : this.initialize(t);\n    }\n  }, {\n    key: \"initialize\",\n    value: function () {}\n  }]), tt);\n  function tt() {\n    o(this, tt);\n  }\n  var et = (r(it, $), t(it, [{\n    key: \"initialize\",\n    value: function (t) {\n      this.lifePan.a === 1 / 0 ? t.life = 1 / 0 : t.life = this.lifePan.getValue();\n    }\n  }]), it);\n  function it(t, e, i) {\n    o(this, it);\n    var a = h(this, (it.__proto__ || Object.getPrototypeOf(it)).call(this));\n    return a.lifePan = l.setSpanValue(t, e, i), a.name = \"Life\", a;\n  }\n  var at = (t(rt, [{\n    key: \"getPosition\",\n    value: function () {}\n  }, {\n    key: \"crossing\",\n    value: function () {}\n  }]), rt);\n  function rt() {\n    o(this, rt), this.vector = new F(0, 0), this.random = 0, this.crossType = \"dead\", this.alert = !0;\n  }\n  var nt = (r(st, at), t(st, [{\n    key: \"getPosition\",\n    value: function () {\n      return this.vector.x = this.x, this.vector.y = this.y, this.vector;\n    }\n  }, {\n    key: \"crossing\",\n    value: function () {\n      this.alert && (console.error(\"Sorry, PointZone does not support crossing method!\"), this.alert = !1);\n    }\n  }]), st);\n  function st(t, e) {\n    o(this, st);\n    var i = h(this, (st.__proto__ || Object.getPrototypeOf(st)).call(this));\n    return i.x = t, i.y = e, i;\n  }\n  var ot = (r(ht, $), t(ht, [{\n    key: \"reset\",\n    value: function (t) {\n      this.zone = P.initValue(t, new nt());\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      this.zone.getPosition(), t.p.x = this.zone.vector.x, t.p.y = this.zone.vector.y;\n    }\n  }]), ht);\n  function ht(t) {\n    o(this, ht);\n    var e = h(this, (ht.__proto__ || Object.getPrototypeOf(ht)).call(this));\n    return e.zone = P.initValue(t, new nt()), e.name = \"Position\", e;\n  }\n  var lt = (r(ut, $), t(ut, [{\n    key: \"reset\",\n    value: function (t, e, i) {\n      this.rPan = l.setSpanValue(t), this.thaPan = l.setSpanValue(e), this.type = P.initValue(i, \"vector\");\n    }\n  }, {\n    key: \"normalizeVelocity\",\n    value: function (t) {\n      return t * V.MEASURE;\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      var e;\n      \"p\" === this.type || \"P\" === this.type || \"polar\" === this.type ? (e = new q(this.normalizeVelocity(this.rPan.getValue()), this.thaPan.getValue() * s.PI_180), t.v.x = e.getX(), t.v.y = e.getY()) : (t.v.x = this.normalizeVelocity(this.rPan.getValue()), t.v.y = this.normalizeVelocity(this.thaPan.getValue()));\n    }\n  }]), ut);\n  function ut(t, e, i) {\n    o(this, ut);\n    var a = h(this, (ut.__proto__ || Object.getPrototypeOf(ut)).call(this));\n    return a.rPan = l.setSpanValue(t), a.thaPan = l.setSpanValue(e), a.type = P.initValue(i, \"vector\"), a.name = \"Velocity\", a;\n  }\n  var ct = (r(dt, $), t(dt, [{\n    key: \"initialize\",\n    value: function (t) {\n      t.mass = this.massPan.getValue();\n    }\n  }]), dt);\n  function dt(t, e, i) {\n    o(this, dt);\n    var a = h(this, (dt.__proto__ || Object.getPrototypeOf(dt)).call(this));\n    return a.massPan = l.setSpanValue(t, e, i), a.name = \"Mass\", a;\n  }\n  var yt = (r(pt, $), t(pt, [{\n    key: \"reset\",\n    value: function (t, e, i) {\n      this.radius = l.setSpanValue(t, e, i);\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      t.radius = this.radius.getValue(), t.data.oldRadius = t.radius;\n    }\n  }]), pt);\n  function pt(t, e, i) {\n    o(this, pt);\n    var a = h(this, (pt.__proto__ || Object.getPrototypeOf(pt)).call(this));\n    return a.radius = l.setSpanValue(t, e, i), a.name = \"Radius\", a;\n  }\n  var ft = (r(vt, $), t(vt, [{\n    key: \"initialize\",\n    value: function (t) {\n      var e = this.image.getValue();\n      t.body = \"string\" == typeof e ? {\n        width: this.w,\n        height: this.h,\n        src: e,\n        isInner: !0,\n        inner: !0\n      } : e;\n    }\n  }, {\n    key: \"setSpanValue\",\n    value: function (t) {\n      return t instanceof Y ? t : new Y(t);\n    }\n  }]), vt);\n  function vt(t, e, i) {\n    o(this, vt);\n    var a = h(this, (vt.__proto__ || Object.getPrototypeOf(vt)).call(this));\n    return a.image = a.setSpanValue(t), a.w = P.initValue(e, 20), a.h = P.initValue(i, a.w), a.name = \"Body\", a;\n  }\n  var gt = (t(mt, [{\n    key: \"reset\",\n    value: function (t, e) {\n      this.life = P.initValue(t, 1 / 0), this.easing = U.getEasing(e);\n    }\n  }, {\n    key: \"normalizeForce\",\n    value: function (t) {\n      return t.multiplyScalar(V.MEASURE);\n    }\n  }, {\n    key: \"normalizeValue\",\n    value: function (t) {\n      return t * V.MEASURE;\n    }\n  }, {\n    key: \"initialize\",\n    value: function () {}\n  }, {\n    key: \"calculate\",\n    value: function (t, e) {\n      this.age += e, this.age >= this.life || this.dead ? (this.energy = 0, this.dead = !0, this.destroy()) : (t = this.easing(t.age / t.life), this.energy = Math.max(1 - t, 0));\n    }\n  }, {\n    key: \"destroy\",\n    value: function () {\n      for (var t = this.parents.length; t--;) this.parents[t].removeBehaviour(this);\n      this.parents.length = 0;\n    }\n  }]), mt);\n  function mt(t, e) {\n    o(this, mt), this.life = P.initValue(t, 1 / 0), this.easing = U.getEasing(e), this.age = 0, this.energy = 1, this.dead = !1, this.parents = [], this.id = \"Behaviour_\" + mt.id++, this.name = \"Behaviour\";\n  }\n  gt.id = 0;\n  var bt = (r(_t, gt), t(_t, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.force = this.normalizeForce(new F(t, e)), i && n(_t.prototype.__proto__ || Object.getPrototypeOf(_t.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), t.a.add(this.force);\n    }\n  }]), _t);\n  function _t(t, e, i, a) {\n    o(this, _t);\n    a = h(this, (_t.__proto__ || Object.getPrototypeOf(_t)).call(this, i, a));\n    return a.force = a.normalizeForce(new F(t, e)), a.name = \"Force\", a;\n  }\n  var xt = (r(kt, gt), t(kt, [{\n    key: \"reset\",\n    value: function (t, e, i, a, r) {\n      this.targetPosition = P.initValue(t, new F()), this.radius = P.initValue(i, 1e3), this.force = P.initValue(this.normalizeValue(e), 100), this.radiusSq = this.radius * this.radius, this.attractionForce = new F(), this.lengthSq = 0, a && n(kt.prototype.__proto__ || Object.getPrototypeOf(kt.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), this.attractionForce.copy(this.targetPosition), this.attractionForce.sub(t.p), this.lengthSq = this.attractionForce.lengthSq(), 4e-5 < this.lengthSq && this.lengthSq < this.radiusSq && (this.attractionForce.normalize(), this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq), this.attractionForce.multiplyScalar(this.force), t.a.add(this.attractionForce));\n    }\n  }]), kt);\n  function kt(t, e, i, a, r) {\n    o(this, kt);\n    r = h(this, (kt.__proto__ || Object.getPrototypeOf(kt)).call(this, a, r));\n    return r.targetPosition = P.initValue(t, new F()), r.radius = P.initValue(i, 1e3), r.force = P.initValue(r.normalizeValue(e), 100), r.radiusSq = r.radius * r.radius, r.attractionForce = new F(), r.lengthSq = 0, r.name = \"Attraction\", r;\n  }\n  var Pt = (r(Et, gt), t(Et, [{\n    key: \"reset\",\n    value: function (t, e, i, a, r) {\n      this.panFoce = new F(t, e), this.panFoce = this.normalizeForce(this.panFoce), this.delay = i, a && n(Et.prototype.__proto__ || Object.getPrototypeOf(Et.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      t.data.time = 0;\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), t.data.time += e, t.data.time >= this.delay && (t.a.addXY(s.randomAToB(-this.panFoce.x, this.panFoce.x), s.randomAToB(-this.panFoce.y, this.panFoce.y)), t.data.time = 0);\n    }\n  }]), Et);\n  function Et(t, e, i, a, r) {\n    o(this, Et);\n    r = h(this, (Et.__proto__ || Object.getPrototypeOf(Et)).call(this, a, r));\n    return r.reset(t, e, i), r.time = 0, r.name = \"RandomDrift\", r;\n  }\n  var At = (r(Tt, bt), t(Tt, [{\n    key: \"reset\",\n    value: function (t, e, i) {\n      n(Tt.prototype.__proto__ || Object.getPrototypeOf(Tt.prototype), \"reset\", this).call(this, 0, t, e, i);\n    }\n  }]), Tt);\n  function Tt(t, e, i) {\n    o(this, Tt);\n    i = h(this, (Tt.__proto__ || Object.getPrototypeOf(Tt)).call(this, 0, t, e, i));\n    return i.name = \"Gravity\", i;\n  }\n  var Rt = (r(Ot, gt), t(Ot, [{\n    key: \"reset\",\n    value: function (t, e, i, a, r) {\n      this.emitter = P.initValue(t, null), this.mass = P.initValue(e, !0), this.callback = P.initValue(i, null), this.collisionPool = [], this.delta = new F(), a && n(Ot.prototype.__proto__ || Object.getPrototypeOf(Ot.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      for (var a, r, n, s, o, h, l = (this.emitter ? this.emitter.particles : this.pool).slice(i), u = l.length, c = void 0, d = void 0, d = 0; d < u; d++) {\n        (c = l[d]) !== t && (this.delta.copy(c.p), this.delta.sub(t.p), (a = this.delta.lengthSq()) <= (h = t.radius + c.radius) * h && (r = h - Math.sqrt(a), r += .5, n = t.mass + c.mass, s = this.mass ? c.mass / n : .5, o = this.mass ? t.mass / n : .5, t.p.add(this.delta.clone().normalize().multiplyScalar(r * -s)), c.p.add(this.delta.normalize().multiplyScalar(r * o)), this.callback && this.callback(t, c)));\n      }\n    }\n  }]), Ot);\n  function Ot(t, e, i, a, r) {\n    o(this, Ot);\n    r = h(this, (Ot.__proto__ || Object.getPrototypeOf(Ot)).call(this, a, r));\n    return r.reset(t, e, i), r.name = \"Collision\", r;\n  }\n  var wt = (r(Ct, gt), t(Ct, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.zone = t, this.zone.crossType = P.initValue(e, \"dead\"), i && n(Ct.prototype.__proto__ || Object.getPrototypeOf(Ct.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), this.zone.crossing(t);\n    }\n  }]), Ct);\n  function Ct(t, e, i, a) {\n    o(this, Ct);\n    a = h(this, (Ct.__proto__ || Object.getPrototypeOf(Ct)).call(this, i, a));\n    return a.reset(t, e), a.name = \"CrossZone\", a;\n  }\n  var St = (r(It, gt), t(It, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.same = null == e, this.a = l.setSpanValue(P.initValue(t, 1)), this.b = l.setSpanValue(e), i && n(It.prototype.__proto__ || Object.getPrototypeOf(It.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      t.data.alphaA = this.a.getValue(), this.same ? t.data.alphaB = t.data.alphaA : t.data.alphaB = this.b.getValue();\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), t.alpha = t.data.alphaB + (t.data.alphaA - t.data.alphaB) * this.energy, t.alpha < .001 && (t.alpha = 0);\n    }\n  }]), It);\n  function It(t, e, i, a) {\n    o(this, It);\n    a = h(this, (It.__proto__ || Object.getPrototypeOf(It)).call(this, i, a));\n    return a.reset(t, e), a.name = \"Alpha\", a;\n  }\n  var Dt = (r(Vt, gt), t(Vt, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.same = null == e, this.a = l.setSpanValue(P.initValue(t, 1)), this.b = l.setSpanValue(e), i && n(Vt.prototype.__proto__ || Object.getPrototypeOf(Vt.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      t.data.scaleA = this.a.getValue(), t.data.oldRadius = t.radius, t.data.scaleB = this.same ? t.data.scaleA : this.b.getValue();\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), t.scale = t.data.scaleB + (t.data.scaleA - t.data.scaleB) * this.energy, t.scale < 1e-4 && (t.scale = 0), t.radius = t.data.oldRadius * t.scale;\n    }\n  }]), Vt);\n  function Vt(t, e, i, a) {\n    o(this, Vt);\n    a = h(this, (Vt.__proto__ || Object.getPrototypeOf(Vt)).call(this, i, a));\n    return a.reset(t, e), a.name = \"Scale\", a;\n  }\n  var Mt = (r(Bt, gt), t(Bt, [{\n    key: \"reset\",\n    value: function (t, e, i, a, r) {\n      this.same = null == e, this.a = l.setSpanValue(P.initValue(t, \"Velocity\")), this.b = l.setSpanValue(P.initValue(e, 0)), this.style = P.initValue(i, \"to\"), a && n(Bt.prototype.__proto__ || Object.getPrototypeOf(Bt.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      t.rotation = this.a.getValue(), t.data.rotationA = this.a.getValue(), this.same || (t.data.rotationB = this.b.getValue());\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.calculate(t, e, i), this.same ? \"V\" !== this.a.a && \"Velocity\" !== this.a.a && \"v\" !== this.a.a || (t.rotation = t.getDirection()) : \"to\" === this.style || \"TO\" === this.style || \"_\" === this.style ? t.rotation += t.data.rotationB + (t.data.rotationA - t.data.rotationB) * this.energy : t.rotation += t.data.rotationB;\n    }\n  }]), Bt);\n  function Bt(t, e, i, a, r) {\n    o(this, Bt);\n    r = h(this, (Bt.__proto__ || Object.getPrototypeOf(Bt)).call(this, a, r));\n    return r.reset(t, e, i), r.name = \"Rotate\", r;\n  }\n  var Lt = (r(Ut, gt), t(Ut, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.a = Y.createArraySpan(t), this.b = Y.createArraySpan(e), i && n(Ut.prototype.__proto__ || Object.getPrototypeOf(Ut.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function (t) {\n      t.color = this.a.getValue(), t.data.colorA = H.hexToRgb(t.color), this.b && (t.data.colorB = H.hexToRgb(this.b.getValue()));\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e, i) {\n      this.b ? (this.calculate(t, e, i), t.rgb.r = t.data.colorB.r + (t.data.colorA.r - t.data.colorB.r) * this.energy, t.rgb.g = t.data.colorB.g + (t.data.colorA.g - t.data.colorB.g) * this.energy, t.rgb.b = t.data.colorB.b + (t.data.colorA.b - t.data.colorB.b) * this.energy, t.rgb.r = Math.floor(t.rgb.r), t.rgb.g = Math.floor(t.rgb.g), t.rgb.b = Math.floor(t.rgb.b)) : (t.rgb.r = t.data.colorA.r, t.rgb.g = t.data.colorA.g, t.rgb.b = t.data.colorA.b);\n    }\n  }]), Ut);\n  function Ut(t, e, i, a) {\n    o(this, Ut);\n    a = h(this, (Ut.__proto__ || Object.getPrototypeOf(Ut)).call(this, i, a));\n    return a.reset(t, e), a.name = \"Color\", a;\n  }\n  var Ft = \"changing\",\n    zt = (r(jt, gt), t(jt, [{\n      key: \"setAngleAndForce\",\n      value: function (t, e) {\n        this.force = Ft, this.angle = s.PI / 2, \"right\" === t ? this.angle = s.PI / 2 : \"left\" === t ? this.angle = -s.PI / 2 : \"random\" === t ? this.angle = \"random\" : t instanceof l ? (this.angle = \"span\", this.span = t) : t && (this.angle = t), \"changing\" === String(e).toLowerCase() || \"chang\" === String(e).toLowerCase() || \"auto\" === String(e).toLowerCase() ? this.force = Ft : e && (this.force = e);\n      }\n    }, {\n      key: \"reset\",\n      value: function (t, e, i, a) {\n        this.angle = s.PI / 2, this.setAngleAndForce(t, e), i && n(jt.prototype.__proto__ || Object.getPrototypeOf(jt.prototype), \"reset\", this).call(this, i, a);\n      }\n    }, {\n      key: \"initialize\",\n      value: function (t) {\n        \"random\" === this.angle ? t.data.cangle = s.randomAToB(-s.PI, s.PI) : \"span\" === this.angle && (t.data.cangle = this.span.getValue()), t.data.cyclone = new F(0, 0);\n      }\n    }, {\n      key: \"applyBehaviour\",\n      value: function (t, e, i) {\n        this.calculate(t, e, i);\n        e = void 0, i = t.v.getGradient();\n        \"random\" === this.angle || \"span\" === this.angle ? i += t.data.cangle : i += this.angle, e = this.force === Ft ? t.v.length() / 100 : this.force, t.data.cyclone.x = e * Math.cos(i), t.data.cyclone.y = e * Math.sin(i), t.data.cyclone = this.normalizeForce(t.data.cyclone), t.a.add(t.data.cyclone);\n      }\n    }]), jt);\n  function jt(t, e, i, a) {\n    o(this, jt);\n    a = h(this, (jt.__proto__ || Object.getPrototypeOf(jt)).call(this, i, a));\n    return a.setAngleAndForce(t, e), a.name = \"Cyclone\", a;\n  }\n  var Nt = (r(Ht, xt), t(Ht, [{\n    key: \"reset\",\n    value: function (t, e, i, a, r) {\n      n(Ht.prototype.__proto__ || Object.getPrototypeOf(Ht.prototype), \"reset\", this).call(this, t, e, i, a, r), this.force *= -1;\n    }\n  }]), Ht);\n  function Ht(t, e, i, a, r) {\n    o(this, Ht);\n    r = h(this, (Ht.__proto__ || Object.getPrototypeOf(Ht)).call(this, t, e, i, a, r));\n    return r.force *= -1, r.name = \"Repulsion\", r;\n  }\n  var qt = (r(Gt, gt), t(Gt, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.distanceVec = new F(), this.centerPoint = P.initValue(t, new F()), this.force = P.initValue(this.normalizeValue(e), 100), i && n(Gt.prototype.__proto__ || Object.getPrototypeOf(Gt.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function () {}\n  }, {\n    key: \"applyBehaviour\",\n    value: function (t, e) {\n      this.distanceVec.set(this.centerPoint.x - t.p.x, this.centerPoint.y - t.p.y);\n      var i,\n        a = this.distanceVec.lengthSq();\n      0 !== a && (i = this.distanceVec.length(), i = this.force * e / (a * i), t.v.x += i * this.distanceVec.x, t.v.y += i * this.distanceVec.y);\n    }\n  }]), Gt);\n  function Gt(t, e, i, a) {\n    o(this, Gt);\n    a = h(this, (Gt.__proto__ || Object.getPrototypeOf(Gt)).call(this, i, a));\n    return a.distanceVec = new F(), a.centerPoint = P.initValue(t, new F()), a.force = P.initValue(a.normalizeValue(e), 100), a.name = \"GravityWell\", a;\n  }\n  var Xt = {\n      initialize: function (t, e, i) {\n        for (var a = i.length, r = void 0, r = 0; r < a; r++) i[r] instanceof $ ? i[r].init(t, e) : this.init(t, e, i[r]);\n        this.bindEmitter(t, e);\n      },\n      init: function (t, e, i) {\n        P.setProp(e, i), P.setVectorVal(e, i);\n      },\n      bindEmitter: function (t, e) {\n        t.bindEmitter && (e.p.add(t.p), e.v.add(t.v), e.a.add(t.a), e.v.rotate(s.degreeTransform(t.rotation)));\n      }\n    },\n    Yt = (r(Wt, j), t(Wt, [{\n      key: \"emit\",\n      value: function (t, e) {\n        this.stoped = !1, this.emitTime = 0, this.totalTime = P.initValue(t, 1 / 0), !0 === e || \"life\" === e || \"destroy\" === e ? this.life = \"once\" === t ? 1 : this.totalTime : isNaN(e) || (this.life = e), this.rate.init();\n      }\n    }, {\n      key: \"stop\",\n      value: function () {\n        this.totalTime = -1, this.emitTime = 0, this.stoped = !0;\n      }\n    }, {\n      key: \"preEmit\",\n      value: function (t) {\n        var e = this.stoped,\n          i = this.emitTime,\n          a = this.totalTime;\n        this.stoped = !1, this.emitTime = 0, this.totalTime = t, this.rate.init();\n        for (; .0167 < t;) t -= .0167, this.update(.0167);\n        this.stoped = e, this.emitTime = i + Math.max(t, 0), this.totalTime = a;\n      }\n    }, {\n      key: \"removeAllParticles\",\n      value: function () {\n        for (var t = this.particles.length; t--;) this.particles[t].dead = !0;\n      }\n    }, {\n      key: \"addSelfInitialize\",\n      value: function (t) {\n        t.init ? t.init(this) : this.initAll();\n      }\n    }, {\n      key: \"addInitialize\",\n      value: function () {\n        for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) e[i] = arguments[i];\n        for (var a = e.length; a--;) this.initializes.push(e[a]);\n      }\n    }, {\n      key: \"removeInitialize\",\n      value: function (t) {\n        t = this.initializes.indexOf(t);\n        -1 < t && this.initializes.splice(t, 1);\n      }\n    }, {\n      key: \"removeAllInitializers\",\n      value: function () {\n        P.emptyArray(this.initializes);\n      }\n    }, {\n      key: \"addBehaviour\",\n      value: function () {\n        for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) e[i] = arguments[i];\n        for (var a = arguments.length; a--;) {\n          var r = e[a];\n          this.behaviours.push(r), r.parents && r.parents.push(this);\n        }\n      }\n    }, {\n      key: \"removeBehaviour\",\n      value: function (t) {\n        var e = this.behaviours.indexOf(t);\n        return this.behaviours.splice(e, 1), t.parents && (e = t.parents.indexOf(t), t.parents.splice(e, 1)), e;\n      }\n    }, {\n      key: \"removeAllBehaviours\",\n      value: function () {\n        P.emptyArray(this.behaviours);\n      }\n    }, {\n      key: \"update\",\n      value: function (t) {\n        this.age += t, (this.age >= this.life || this.dead) && this.destroy(), this.emitting(t), this.integrate(t);\n      }\n    }, {\n      key: \"integrate\",\n      value: function (t) {\n        if (this.parent) {\n          var e = 1 - this.damping;\n          this.parent.integrator.calculate(this, t, e);\n          for (var i = void 0, a = void 0, i = this.particles.length - 1; 0 <= i; i--) (a = this.particles[i]).update(t, i), this.parent.integrator.calculate(a, t, e), this.dispatch(\"PARTICLE_UPDATE\", a), a.dead && (this.dispatch(\"PARTICLE_DEAD\", a), this.parent.pool.expire(a), this.particles.splice(i, 1));\n        }\n      }\n    }, {\n      key: \"dispatch\",\n      value: function (t, e) {\n        this.parent && this.parent.dispatchEvent(t, e), this.bindEvent && this.dispatchEvent(t, e);\n      }\n    }, {\n      key: \"emitting\",\n      value: function (t) {\n        if (\"once\" === this.totalTime) {\n          var e = void 0,\n            i = this.rate.getValue(99999);\n          for (0 < i && (this.emitSpeed = i), e = 0; e < i; e++) this.createParticle();\n          this.totalTime = \"none\";\n        } else if (this.emitTime += t, this.emitTime < this.totalTime) {\n          var a = this.rate.getValue(t),\n            r = void 0;\n          for (0 < a && (this.emitSpeed = a), r = 0; r < a; r++) this.createParticle();\n        }\n      }\n    }, {\n      key: \"createParticle\",\n      value: function (t, e) {\n        var i = this.parent.pool.get(j);\n        return this.setupParticle(i, t, e), this.dispatch(\"PARTICLE_CREATED\", i), i;\n      }\n    }, {\n      key: \"setupParticle\",\n      value: function (t, e, i) {\n        var a = this.initializes,\n          r = this.behaviours;\n        e && (a = P.toArray(e)), i && (r = P.toArray(i)), t.reset(), Xt.initialize(this, t, a), t.addBehaviours(r), (t.parent = this).particles.push(t);\n      }\n    }, {\n      key: \"remove\",\n      value: function () {\n        this.stop(), P.destroyAll(this.particles);\n      }\n    }, {\n      key: \"destroy\",\n      value: function () {\n        this.dead = !0, this.remove(), this.removeAllInitializers(), this.removeAllBehaviours(), this.parent && this.parent.removeEmitter(this);\n      }\n    }]), Wt);\n  function Wt() {\n    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};\n    o(this, Wt);\n    t = h(this, (Wt.__proto__ || Object.getPrototypeOf(Wt)).call(this, t));\n    return t.particles = [], t.behaviours = [], t.initializes = [], t.emitTime = 0, t.emitSpeed = 0, t.totalTime = -1, t.damping = .006, t.bindEmitter = !0, t.rate = new K(1, .1), t.name = \"Emitter\", t.id = A.id(t.name), t;\n  }\n  C.bind(Yt);\n  var Zt = (r(Qt, Yt), t(Qt, [{\n    key: \"addSelfBehaviour\",\n    value: function () {\n      for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) e[i] = arguments[i];\n      for (var a = void 0, r = e.length, a = 0; a < r; a++) {\n        var n = e[a];\n        this.selfBehaviours.push(n), n.initialize(this);\n      }\n    }\n  }, {\n    key: \"removeSelfBehaviour\",\n    value: function (t) {\n      t = this.selfBehaviours.indexOf(t);\n      -1 < t && this.selfBehaviours.splice(t, 1);\n    }\n  }, {\n    key: \"update\",\n    value: function (t) {\n      if (n(Qt.prototype.__proto__ || Object.getPrototypeOf(Qt.prototype), \"update\", this).call(this, t), !this.sleep) for (var e = this.selfBehaviours.length, i = void 0, i = 0; i < e; i++) this.selfBehaviours[i].applyBehaviour(this, t, i);\n    }\n  }]), Qt);\n  function Qt(t) {\n    o(this, Qt);\n    t = h(this, (Qt.__proto__ || Object.getPrototypeOf(Qt)).call(this, t));\n    return t.selfBehaviours = [], t;\n  }\n  var Kt = (r(Jt, Yt), t(Jt, [{\n    key: \"initEventHandler\",\n    value: function () {\n      var e = this;\n      this.mousemoveHandler = function (t) {\n        return e.mousemove.call(e, t);\n      }, this.mousedownHandler = function (t) {\n        return e.mousedown.call(e, t);\n      }, this.mouseupHandler = function (t) {\n        return e.mouseup.call(e, t);\n      }, this.mouseTarget.addEventListener(\"mousemove\", this.mousemoveHandler, !1);\n    }\n  }, {\n    key: \"emit\",\n    value: function () {\n      this._allowEmitting = !0;\n    }\n  }, {\n    key: \"stop\",\n    value: function () {\n      this._allowEmitting = !1;\n    }\n  }, {\n    key: \"mousemove\",\n    value: function (t) {\n      t.layerX || 0 === t.layerX ? (this.p.x += (t.layerX - this.p.x) * this.ease, this.p.y += (t.layerY - this.p.y) * this.ease) : !t.offsetX && 0 !== t.offsetX || (this.p.x += (t.offsetX - this.p.x) * this.ease, this.p.y += (t.offsetY - this.p.y) * this.ease), this._allowEmitting && n(Jt.prototype.__proto__ || Object.getPrototypeOf(Jt.prototype), \"emit\", this).call(this, \"once\");\n    }\n  }, {\n    key: \"destroy\",\n    value: function () {\n      n(Jt.prototype.__proto__ || Object.getPrototypeOf(Jt.prototype), \"destroy\", this).call(this), this.mouseTarget.removeEventListener(\"mousemove\", this.mousemoveHandler, !1);\n    }\n  }]), Jt);\n  function Jt(t, e, i) {\n    o(this, Jt);\n    i = h(this, (Jt.__proto__ || Object.getPrototypeOf(Jt)).call(this, i));\n    return i.mouseTarget = P.initValue(t, window), i.ease = P.initValue(e, .7), i._allowEmitting = !1, i.initEventHandler(), i;\n  }\n  var $t = (t(te, [{\n    key: \"setStroke\",\n    value: function (t, e) {\n      t = 0 < arguments.length && void 0 !== t ? t : \"#000000\", e = 1 < arguments.length && void 0 !== e ? e : 1;\n      this.stroke = {\n        color: t,\n        thinkness: e\n      };\n    }\n  }, {\n    key: \"initHandler\",\n    value: function () {\n      var e = this;\n      this._protonUpdateHandler = function () {\n        e.onProtonUpdate.call(e);\n      }, this._protonUpdateAfterHandler = function () {\n        e.onProtonUpdateAfter.call(e);\n      }, this._emitterAddedHandler = function (t) {\n        e.onEmitterAdded.call(e, t);\n      }, this._emitterRemovedHandler = function (t) {\n        e.onEmitterRemoved.call(e, t);\n      }, this._particleCreatedHandler = function (t) {\n        e.onParticleCreated.call(e, t);\n      }, this._particleUpdateHandler = function (t) {\n        e.onParticleUpdate.call(e, t);\n      }, this._particleDeadHandler = function (t) {\n        e.onParticleDead.call(e, t);\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function (t) {\n      (this.parent = t).addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler), t.addEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler), t.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler), t.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler), t.addEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler), t.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler), t.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n  }, {\n    key: \"resize\",\n    value: function () {}\n  }, {\n    key: \"destroy\",\n    value: function () {\n      this.remove();\n    }\n  }, {\n    key: \"remove\",\n    value: function () {\n      this.parent.removeEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler), this.parent.removeEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler), this.parent.removeEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler), this.parent.removeEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler), this.parent.removeEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler), this.parent.removeEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler), this.parent.removeEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler), this.parent = null;\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function () {}\n  }, {\n    key: \"onProtonUpdateAfter\",\n    value: function () {}\n  }, {\n    key: \"onEmitterAdded\",\n    value: function () {}\n  }, {\n    key: \"onEmitterRemoved\",\n    value: function () {}\n  }, {\n    key: \"onParticleCreated\",\n    value: function () {}\n  }, {\n    key: \"onParticleUpdate\",\n    value: function () {}\n  }, {\n    key: \"onParticleDead\",\n    value: function () {}\n  }]), te);\n  function te(t, e) {\n    o(this, te), this.pool = new T(), this.element = t, this.stroke = e, this.circleConf = {\n      isCircle: !0\n    }, this.initHandler(), this.name = \"BaseRenderer\";\n  }\n  var ee = (r(ie, $t), t(ie, [{\n    key: \"resize\",\n    value: function (t, e) {\n      this.element.width = t, this.element.height = e;\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function () {\n      this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n  }, {\n    key: \"onParticleCreated\",\n    value: function (t) {\n      t.body ? x(t.body, this.addImg2Body, t) : t.color = t.color || \"#ff0000\";\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function (t) {\n      t.body ? t.body instanceof Image && this.drawImage(t) : this.drawCircle(t);\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function (t) {\n      t.body = null;\n    }\n  }, {\n    key: \"addImg2Body\",\n    value: function (t, e) {\n      e.body = t;\n    }\n  }, {\n    key: \"drawImage\",\n    value: function (t) {\n      var e,\n        i = t.body.width * t.scale | 0,\n        a = t.body.height * t.scale | 0,\n        r = t.p.x - i / 2,\n        n = t.p.y - a / 2;\n      t.color ? (t.data.buffer || (t.data.buffer = this.createBuffer(t.body)), (e = t.data.buffer.getContext(\"2d\")).clearRect(0, 0, t.data.buffer.width, t.data.buffer.height), e.globalAlpha = t.alpha, e.drawImage(t.body, 0, 0), e.globalCompositeOperation = \"source-atop\", e.fillStyle = H.rgbToHex(t.rgb), e.fillRect(0, 0, t.data.buffer.width, t.data.buffer.height), e.globalCompositeOperation = \"source-over\", e.globalAlpha = 1, this.context.drawImage(t.data.buffer, 0, 0, t.data.buffer.width, t.data.buffer.height, r, n, i, a)) : (this.context.save(), this.context.globalAlpha = t.alpha, this.context.translate(t.p.x, t.p.y), this.context.rotate(s.degreeTransform(t.rotation)), this.context.translate(-t.p.x, -t.p.y), this.context.drawImage(t.body, 0, 0, t.body.width, t.body.height, r, n, i, a), this.context.globalAlpha = 1, this.context.restore());\n    }\n  }, {\n    key: \"drawCircle\",\n    value: function (t) {\n      t.rgb ? this.context.fillStyle = \"rgba(\" + t.rgb.r + \",\" + t.rgb.g + \",\" + t.rgb.b + \",\" + t.alpha + \")\" : this.context.fillStyle = t.color, this.context.beginPath(), this.context.arc(t.p.x, t.p.y, t.radius, 0, 2 * Math.PI, !0), this.stroke && (this.context.strokeStyle = this.stroke.color, this.context.lineWidth = this.stroke.thinkness, this.context.stroke()), this.context.closePath(), this.context.fill();\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function (t) {\n      if (t instanceof Image) {\n        var e = t.width + \"_\" + t.height,\n          i = this.bufferCache[e];\n        return i || ((i = document.createElement(\"canvas\")).width = t.width, i.height = t.height, this.bufferCache[e] = i), i;\n      }\n    }\n  }]), ie);\n  function ie(t) {\n    o(this, ie);\n    t = h(this, (ie.__proto__ || Object.getPrototypeOf(ie)).call(this, t));\n    return t.stroke = null, t.context = t.element.getContext(\"2d\"), t.bufferCache = {}, t.name = \"CanvasRenderer\", t;\n  }\n  var ae = (r(re, $t), t(re, [{\n    key: \"onParticleCreated\",\n    value: function (t) {\n      t.body ? x(t.body, this.addImg2Body, t) : (t.body = this.pool.get(this.circleConf, t), this.element.appendChild(t.body));\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function (t) {\n      this.bodyReady(t) && (this.transform3d ? v.transform3d(t.body, t.p.x, t.p.y, t.scale, t.rotation) : v.transform(t.body, t.p.x, t.p.y, t.scale, t.rotation), t.body.style.opacity = t.alpha, t.body.isCircle && (t.body.style.backgroundColor = t.color || \"#ff0000\"));\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function (t) {\n      this.bodyReady(t) && (this.element.removeChild(t.body), this.pool.expire(t.body), t.body = null);\n    }\n  }, {\n    key: \"bodyReady\",\n    value: function (t) {\n      return \"object\" === i(t.body) && t.body && !t.body.isInner;\n    }\n  }, {\n    key: \"addImg2Body\",\n    value: function (t, e) {\n      e.dead || (e.body = this.pool.get(t, e), v.resize(e.body, t.width, t.height), this.element.appendChild(e.body));\n    }\n  }, {\n    key: \"createBody\",\n    value: function (t, e) {\n      return t.isCircle ? this.createCircle(e) : this.createSprite(t, e);\n    }\n  }, {\n    key: \"createCircle\",\n    value: function (t) {\n      var e = v.createDiv(t.id + \"_dom\", 2 * t.radius, 2 * t.radius);\n      return e.style.borderRadius = t.radius + \"px\", this.stroke && (e.style.borderColor = this.stroke.color, e.style.borderWidth = this.stroke.thinkness + \"px\"), e.isCircle = !0, e;\n    }\n  }, {\n    key: \"createSprite\",\n    value: function (t, e) {\n      var i = \"string\" == typeof t ? t : t.src,\n        t = v.createDiv(e.id + \"_dom\", t.width, t.height);\n      return t.style.backgroundImage = \"url(\" + i + \")\", t;\n    }\n  }]), re);\n  function re(t) {\n    o(this, re);\n    var i = h(this, (re.__proto__ || Object.getPrototypeOf(re)).call(this, t));\n    return i.stroke = null, i.pool.create = function (t, e) {\n      return i.createBody(t, e);\n    }, i.addImg2Body = i.addImg2Body.bind(i), i.transform3d = !1, i.name = \"DomRenderer\", i;\n  }\n  var ne = (r(se, $t), t(se, [{\n    key: \"onParticleCreated\",\n    value: function (t) {\n      t.body ? this.createSprite(t) : this.createCircle(t), this.element.addChild(t.body);\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function (t) {\n      t.body && (t.body.x = t.p.x, t.body.y = t.p.y, t.body.alpha = t.alpha, t.body.scaleX = t.body.scaleY = t.scale, t.body.rotation = t.rotation);\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function (t) {\n      t.body && (t.body.parent && t.body.parent.removeChild(t.body), this.pool.expire(t.body), t.body = null), t.graphics && this.pool.expire(t.graphics);\n    }\n  }, {\n    key: \"createSprite\",\n    value: function (t) {\n      t.body = this.pool.get(t.body), t.body.parent || t.body.image && (t.body.regX = t.body.image.width / 2, t.body.regY = t.body.image.height / 2);\n    }\n  }, {\n    key: \"createCircle\",\n    value: function (t) {\n      var e = this.pool.get(createjs.Graphics);\n      this.stroke && (this.stroke instanceof String ? e.beginStroke(this.stroke) : e.beginStroke(\"#000000\")), e.beginFill(t.color || \"#ff0000\").drawCircle(0, 0, t.radius);\n      var i = this.pool.get(createjs.Shape, [e]);\n      t.body = i, t.graphics = e;\n    }\n  }]), se);\n  function se(t, e) {\n    o(this, se);\n    t = h(this, (se.__proto__ || Object.getPrototypeOf(se)).call(this, t));\n    return t.stroke = e, t.name = \"EaselRenderer\", t;\n  }\n  var oe = (r(he, $t), t(he, [{\n    key: \"resize\",\n    value: function (t, e) {\n      this.element.width = t, this.element.height = e;\n    }\n  }, {\n    key: \"createImageData\",\n    value: function (t) {\n      this.rectangle = t || new Z(0, 0, this.element.width, this.element.height), this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height), this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function () {\n      this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height), this.imageData = this.context.getImageData(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    }\n  }, {\n    key: \"onProtonUpdateAfter\",\n    value: function () {\n      this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n    }\n  }, {\n    key: \"onParticleCreated\",\n    value: function () {}\n  }, {\n    key: \"onParticleUpdate\",\n    value: function (t) {\n      this.imageData && this.setPixel(this.imageData, Math.floor(t.p.x - this.rectangle.x), Math.floor(t.p.y - this.rectangle.y), t);\n    }\n  }, {\n    key: \"setPixel\",\n    value: function (t, e, i, a) {\n      var r = a.rgb;\n      e < 0 || e > this.element.width || i < 0 || i > this.elementwidth || (e = 4 * ((i >> 0) * t.width + (e >> 0)), t.data[e] = r.r, t.data[1 + e] = r.g, t.data[2 + e] = r.b, t.data[3 + e] = 255 * a.alpha);\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function () {}\n  }]), he);\n  function he(t, e) {\n    o(this, he);\n    t = h(this, (he.__proto__ || Object.getPrototypeOf(he)).call(this, t));\n    return t.context = t.element.getContext(\"2d\"), t.imageData = null, t.rectangle = null, t.rectangle = e, t.createImageData(e), t.name = \"PixelRenderer\", t;\n  }\n  var le = void 0,\n    ue = (r(ce, $t), t(ce, [{\n      key: \"setPIXI\",\n      value: function (t) {\n        try {\n          le = t || {\n            Sprite: {}\n          }, this.createFromImage = le.Sprite.from || le.Sprite.fromImage;\n        } catch (t) {}\n      }\n    }, {\n      key: \"onProtonUpdate\",\n      value: function () {}\n    }, {\n      key: \"onParticleCreated\",\n      value: function (t) {\n        t.body ? t.body = this.pool.get(t.body, t) : t.body = this.pool.get(this.circleConf, t), this.blendMode && (t.body.blendMode = this.blendMode), this.element.addChild(t.body);\n      }\n    }, {\n      key: \"onParticleUpdate\",\n      value: function (t) {\n        this.transform(t, t.body), !0 !== this.setColor && !0 !== this.color || (t.body.tint = H.getHex16FromParticle(t));\n      }\n    }, {\n      key: \"onParticleDead\",\n      value: function (t) {\n        this.element.removeChild(t.body), this.pool.expire(t.body), t.body = null;\n      }\n    }, {\n      key: \"destroy\",\n      value: function (t) {\n        n(ce.prototype.__proto__ || Object.getPrototypeOf(ce.prototype), \"destroy\", this).call(this), this.pool.destroy();\n        for (var e = t.length; e--;) {\n          var i = t[e];\n          i.body && this.element.removeChild(i.body);\n        }\n      }\n    }, {\n      key: \"transform\",\n      value: function (t, e) {\n        e.x = t.p.x, e.y = t.p.y, e.alpha = t.alpha, e.scale.x = t.scale, e.scale.y = t.scale, e.rotation = t.rotation * s.PI_180;\n      }\n    }, {\n      key: \"createBody\",\n      value: function (t, e) {\n        return t.isCircle ? this.createCircle(e) : this.createSprite(t);\n      }\n    }, {\n      key: \"createSprite\",\n      value: function (t) {\n        t = t.isInner ? this.createFromImage(t.src) : new le.Sprite(t);\n        return t.anchor.x = .5, t.anchor.y = .5, t;\n      }\n    }, {\n      key: \"createCircle\",\n      value: function (t) {\n        var e,\n          i = new le.Graphics();\n        return this.stroke && (e = this.stroke instanceof String ? this.stroke : 0, i.beginStroke(e)), i.beginFill(t.color || 36077), i.drawCircle(0, 0, t.radius), i.endFill(), i;\n      }\n    }]), ce);\n  function ce(t, e) {\n    o(this, ce);\n    var i = h(this, (ce.__proto__ || Object.getPrototypeOf(ce)).call(this, t));\n    return i.stroke = e, i.color = !1, i.setColor = !1, i.blendMode = null, i.pool.create = function (t, e) {\n      return i.createBody(t, e);\n    }, i.setPIXI(window.PIXI), i.name = \"PixiRenderer\", i;\n  }\n  var de = (t(ye, [{\n    key: \"set\",\n    value: function (t, e) {\n      0 === e ? X.set(t, this.mats[0]) : X.multiply(this.mats[e - 1], t, this.mats[e]), this.size = Math.max(this.size, e + 1);\n    }\n  }, {\n    key: \"push\",\n    value: function (t) {\n      0 === this.size ? X.set(t, this.mats[0]) : X.multiply(this.mats[this.size - 1], t, this.mats[this.size]), this.size++;\n    }\n  }, {\n    key: \"pop\",\n    value: function () {\n      0 < this.size && this.size--;\n    }\n  }, {\n    key: \"top\",\n    value: function () {\n      return this.mats[this.size - 1];\n    }\n  }]), ye);\n  function ye() {\n    o(this, ye), this.mats = [];\n    for (var t = this.size = 0; t < 20; t++) this.mats.push(X.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n  r(pe, $t), t(pe, [{\n    key: \"init\",\n    value: function (t) {\n      n(pe.prototype.__proto__ || Object.getPrototypeOf(pe.prototype), \"init\", this).call(this, t), this.resize(this.element.width, this.element.height);\n    }\n  }, {\n    key: \"resize\",\n    value: function (t, e) {\n      this.umat[4] = -2, this.umat[7] = 1, this.smat[0] = 1 / t, this.smat[4] = 1 / e, this.mstack.set(this.umat, 0), this.mstack.set(this.smat, 1), this.gl.viewport(0, 0, t, e), this.element.width = t, this.element.height = e;\n    }\n  }, {\n    key: \"setMaxRadius\",\n    value: function (t) {\n      this.circleCanvasURL = this.createCircle(t);\n    }\n  }, {\n    key: \"getVertexShader\",\n    value: function () {\n      return [\"uniform vec2 viewport;\", \"attribute vec2 aVertexPosition;\", \"attribute vec2 aTextureCoord;\", \"uniform mat3 tMat;\", \"varying vec2 vTextureCoord;\", \"varying float alpha;\", \"void main() {\", \"vec3 v = tMat * vec3(aVertexPosition, 1.0);\", \"gl_Position = vec4(v.x, v.y, 0, 1);\", \"vTextureCoord = aTextureCoord;\", \"alpha = tMat[0][2];\", \"}\"].join(\"\\n\");\n    }\n  }, {\n    key: \"getFragmentShader\",\n    value: function () {\n      return [\"precision mediump float;\", \"varying vec2 vTextureCoord;\", \"varying float alpha;\", \"uniform sampler2D uSampler;\", \"uniform vec4 color;\", \"uniform bool useTexture;\", \"uniform vec3 uColor;\", \"void main() {\", \"vec4 textureColor = texture2D(uSampler, vTextureCoord);\", \"gl_FragColor = textureColor * vec4(uColor, 1.0);\", \"gl_FragColor.w *= alpha;\", \"}\"].join(\"\\n\");\n    }\n  }, {\n    key: \"initVar\",\n    value: function () {\n      this.mstack = new de(), this.umat = X.create([2, 0, 1, 0, -2, 0, -1, 1, 1]), this.smat = X.create([.01, 0, 1, 0, .01, 0, 0, 0, 1]), this.texturebuffers = {};\n    }\n  }, {\n    key: \"blendEquation\",\n    value: function (t) {\n      this.gl.blendEquation(this.gl[t]);\n    }\n  }, {\n    key: \"blendFunc\",\n    value: function (t, e) {\n      this.gl.blendFunc(this.gl[t], this.gl[e]);\n    }\n  }, {\n    key: \"getShader\",\n    value: function (t, e, i) {\n      i = i ? t.createShader(t.FRAGMENT_SHADER) : t.createShader(t.VERTEX_SHADER);\n      return t.shaderSource(i, e), t.compileShader(i), t.getShaderParameter(i, t.COMPILE_STATUS) ? i : (alert(t.getShaderInfoLog(i)), null);\n    }\n  }, {\n    key: \"initShaders\",\n    value: function () {\n      var t = this.getShader(this.gl, this.getFragmentShader(), !0),\n        e = this.getShader(this.gl, this.getVertexShader(), !1);\n      this.sprogram = this.gl.createProgram(), this.gl.attachShader(this.sprogram, e), this.gl.attachShader(this.sprogram, t), this.gl.linkProgram(this.sprogram), this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS) || alert(\"Could not initialise shaders\"), this.gl.useProgram(this.sprogram), this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, \"aVertexPosition\"), this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, \"aTextureCoord\"), this.gl.enableVertexAttribArray(this.sprogram.tca), this.gl.enableVertexAttribArray(this.sprogram.vpa), this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, \"tMat\"), this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, \"uSampler\"), this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, \"useTexture\"), this.sprogram.color = this.gl.getUniformLocation(this.sprogram, \"uColor\"), this.gl.uniform1i(this.sprogram.useTex, 1);\n    }\n  }, {\n    key: \"initBuffers\",\n    value: function () {\n      var t;\n      this.unitIBuffer = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 3, 1, 0, 2, 3]), this.gl.STATIC_DRAW);\n      for (var e = void 0, i = [], e = 0; e < 100; e++) i.push(e);\n      for (t = new Uint16Array(i), this.unitI33 = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, t, this.gl.STATIC_DRAW), i = [], e = 0; e < 100; e++) i.push(e, e + 1, e + 2);\n      t = new Uint16Array(i), this.stripBuffer = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, t, this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: \"createCircle\",\n    value: function (t) {\n      this.circleCanvasRadius = c(P.initValue(t, 32));\n      var e = v.createCanvas(\"circle_canvas\", 2 * this.circleCanvasRadius, 2 * this.circleCanvasRadius),\n        t = e.getContext(\"2d\");\n      return t.beginPath(), t.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, 2 * Math.PI, !0), t.closePath(), t.fillStyle = \"#FFF\", t.fill(), e.toDataURL();\n    }\n  }, {\n    key: \"drawImg2Canvas\",\n    value: function (t) {\n      var e = t.body.width,\n        i = t.body.height,\n        a = c(t.body.width),\n        r = c(t.body.height),\n        n = t.body.width / a,\n        s = t.body.height / r;\n      this.texturebuffers[t.data.src] || (this.texturebuffers[t.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()]), t.data.texture = this.texturebuffers[t.data.src][0], t.data.vcBuffer = this.texturebuffers[t.data.src][1], t.data.tcBuffer = this.texturebuffers[t.data.src][2], this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.tcBuffer), this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0, 0, n, 0, 0, s, s, s]), this.gl.STATIC_DRAW), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.vcBuffer), this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0, 0, e, 0, 0, i, e, i]), this.gl.STATIC_DRAW);\n      r = t.data.canvas.getContext(\"2d\").getImageData(0, 0, a, r);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, t.data.texture), this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, r), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST), this.gl.generateMipmap(this.gl.TEXTURE_2D), t.data.textureLoaded = !0, t.data.textureWidth = e, t.data.textureHeight = i;\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function () {}\n  }, {\n    key: \"onParticleCreated\",\n    value: function (t) {\n      t.data.textureLoaded = !1, t.data.tmat = X.create(), t.data.tmat[8] = 1, t.data.imat = X.create(), t.data.imat[8] = 1, t.body ? x(t.body, this.addImg2Body, t) : (x(this.circleCanvasURL, this.addImg2Body, t), t.data.oldScale = t.radius / this.circleCanvasRadius);\n    }\n  }, {\n    key: \"addImg2Body\",\n    value: function (t, e) {\n      e.dead || (e.body = t, e.data.src = t.src, e.data.canvas = k(t), e.data.oldScale = 1, this.drawImg2Canvas(e));\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function (t) {\n      t.data.textureLoaded && (this.updateMatrix(t), this.gl.uniform3f(this.sprogram.color, t.rgb.r / 255, t.rgb.g / 255, t.rgb.b / 255), this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, !1, this.mstack.top()), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.vcBuffer), this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.tcBuffer), this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindTexture(this.gl.TEXTURE_2D, t.data.texture), this.gl.uniform1i(this.sprogram.samplerUniform, 0), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer), this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0), this.mstack.pop());\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function () {}\n  }, {\n    key: \"updateMatrix\",\n    value: function (t) {\n      var e = d(-t.data.textureWidth / 2, -t.data.textureHeight / 2),\n        i = d(t.p.x, t.p.y),\n        a = t.rotation * s.PI_180,\n        r = y(a),\n        a = t.scale * t.data.oldScale,\n        a = p(a, a),\n        a = f(e, a),\n        a = f(a, r);\n      a = f(a, i), X.inverse(a, t.data.imat), a[2] = t.alpha, this.mstack.push(a);\n    }\n  }]), C = pe;\n  function pe(t) {\n    o(this, pe);\n    t = h(this, (pe.__proto__ || Object.getPrototypeOf(pe)).call(this, t));\n    return t.gl = t.element.getContext(\"experimental-webgl\", {\n      antialias: !0,\n      stencil: !1,\n      depth: !1\n    }), t.gl || alert(\"Sorry your browser do not suppest WebGL!\"), t.initVar(), t.setMaxRadius(), t.initShaders(), t.initBuffers(), t.gl.blendEquation(t.gl.FUNC_ADD), t.gl.blendFunc(t.gl.SRC_ALPHA, t.gl.ONE_MINUS_SRC_ALPHA), t.gl.enable(t.gl.BLEND), t.addImg2Body = t.addImg2Body.bind(t), t.name = \"WebGLRenderer\", t;\n  }\n  r(fe, $t), $t = fe;\n  function fe(t) {\n    o(this, fe);\n    t = h(this, (fe.__proto__ || Object.getPrototypeOf(fe)).call(this, t));\n    return t.name = \"CustomRenderer\", t;\n  }\n  var ve = (r(ge, at), t(ge, [{\n    key: \"getPosition\",\n    value: function () {\n      return this.random = Math.random(), this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient), this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient), this.vector;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function (t, e) {\n      var i = this.dy,\n        a = -this.dx;\n      return 0 < (i * t + a * e + this.dot) * (0 == a ? 1 : a);\n    }\n  }, {\n    key: \"getDistance\",\n    value: function (t, e) {\n      return (this.dy * t + -this.dx * e + this.dot) / Math.sqrt(this.xxyy);\n    }\n  }, {\n    key: \"getSymmetric\",\n    value: function (t) {\n      var e = t.getGradient(),\n        i = 2 * (this.getGradient() - e),\n        a = t.x,\n        e = t.y;\n      return t.x = a * Math.cos(i) - e * Math.sin(i), t.y = a * Math.sin(i) + e * Math.cos(i), t;\n    }\n  }, {\n    key: \"getGradient\",\n    value: function () {\n      return Math.atan2(this.dy, this.dx);\n    }\n  }, {\n    key: \"rangeOut\",\n    value: function (t) {\n      if (Math.abs(this.getGradient()) <= s.PI / 4) {\n        if (t.p.x <= this.maxx && t.p.x >= this.minx) return !0;\n      } else if (t.p.y <= this.maxy && t.p.y >= this.miny) return !0;\n      return !1;\n    }\n  }, {\n    key: \"getLength\",\n    value: function () {\n      return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n    }\n  }, {\n    key: \"crossing\",\n    value: function (t) {\n      \"dead\" === this.crossType ? \">\" === this.direction || \"R\" === this.direction || \"right\" === this.direction || \"down\" === this.direction ? this.rangeOut(t) && this.getDirection(t.p.x, t.p.y) && (t.dead = !0) : this.rangeOut(t) && (this.getDirection(t.p.x, t.p.y) || (t.dead = !0)) : \"bound\" === this.crossType ? this.rangeOut(t) && this.getDistance(t.p.x, t.p.y) <= t.radius && (0 === this.dx ? t.v.x *= -1 : 0 === this.dy ? t.v.y *= -1 : this.getSymmetric(t.v)) : \"cross\" === this.crossType && this.alert && (console.error(\"Sorry, LineZone does not support cross method!\"), this.alert = !1);\n    }\n  }]), ge);\n  function ge(t, e, i, a, r) {\n    o(this, ge);\n    var n = h(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this));\n    return 0 <= i - t ? (n.x1 = t, n.y1 = e, n.x2 = i, n.y2 = a) : (n.x1 = i, n.y1 = a, n.x2 = t, n.y2 = e), n.dx = n.x2 - n.x1, n.dy = n.y2 - n.y1, n.minx = Math.min(n.x1, n.x2), n.miny = Math.min(n.y1, n.y2), n.maxx = Math.max(n.x1, n.x2), n.maxy = Math.max(n.y1, n.y2), n.dot = n.x2 * n.y1 - n.x1 * n.y2, n.xxyy = n.dx * n.dx + n.dy * n.dy, n.gradient = n.getGradient(), n.length = n.getLength(), n.direction = P.initValue(r, \">\"), n;\n  }\n  var me = (r(be, at), t(be, [{\n    key: \"getPosition\",\n    value: function () {\n      return this.angle = s.PIx2 * Math.random(), this.randomRadius = Math.random() * this.radius, this.vector.x = this.x + this.randomRadius * Math.cos(this.angle), this.vector.y = this.y + this.randomRadius * Math.sin(this.angle), this.vector;\n    }\n  }, {\n    key: \"setCenter\",\n    value: function (t, e) {\n      this.center.x = t, this.center.y = e;\n    }\n  }, {\n    key: \"crossing\",\n    value: function (t) {\n      var e = t.p.distanceTo(this.center);\n      \"dead\" === this.crossType ? e - t.radius > this.radius && (t.dead = !0) : \"bound\" === this.crossType ? e + t.radius >= this.radius && this.getSymmetric(t) : \"cross\" === this.crossType && this.alert && (console.error(\"Sorry, CircleZone does not support cross method!\"), this.alert = !1);\n    }\n  }, {\n    key: \"getSymmetric\",\n    value: function (t) {\n      var e = t.v.getGradient(),\n        i = 2 * (this.getGradient(t) - e),\n        a = t.v.x,\n        e = t.v.y;\n      t.v.x = a * Math.cos(i) - e * Math.sin(i), t.v.y = a * Math.sin(i) + e * Math.cos(i);\n    }\n  }, {\n    key: \"getGradient\",\n    value: function (t) {\n      return -s.PI_2 + Math.atan2(t.p.y - this.center.y, t.p.x - this.center.x);\n    }\n  }]), be);\n  function be(t, e, i) {\n    o(this, be);\n    var a = h(this, (be.__proto__ || Object.getPrototypeOf(be)).call(this));\n    return a.x = t, a.y = e, a.radius = i, a.angle = 0, a.center = {\n      x: t,\n      y: e\n    }, a;\n  }\n  var _e = (r(xe, at), t(xe, [{\n    key: \"getPosition\",\n    value: function () {\n      return this.vector.x = this.x + Math.random() * this.width, this.vector.y = this.y + Math.random() * this.height, this.vector;\n    }\n  }, {\n    key: \"crossing\",\n    value: function (t) {\n      \"dead\" === this.crossType ? ((t.p.x + t.radius < this.x || t.p.x - t.radius > this.x + this.width) && (t.dead = !0), (t.p.y + t.radius < this.y || t.p.y - t.radius > this.y + this.height) && (t.dead = !0)) : \"bound\" === this.crossType ? (t.p.x - t.radius < this.x ? (t.p.x = this.x + t.radius, t.v.x *= -1) : t.p.x + t.radius > this.x + this.width && (t.p.x = this.x + this.width - t.radius, t.v.x *= -1), t.p.y - t.radius < this.y ? (t.p.y = this.y + t.radius, t.v.y *= -1) : t.p.y + t.radius > this.y + this.height && (t.p.y = this.y + this.height - t.radius, t.v.y *= -1)) : \"cross\" === this.crossType && (t.p.x + t.radius < this.x && t.v.x <= 0 ? t.p.x = this.x + this.width + t.radius : t.p.x - t.radius > this.x + this.width && 0 <= t.v.x && (t.p.x = this.x - t.radius), t.p.y + t.radius < this.y && t.v.y <= 0 ? t.p.y = this.y + this.height + t.radius : t.p.y - t.radius > this.y + this.height && 0 <= t.v.y && (t.p.y = this.y - t.radius));\n    }\n  }]), xe);\n  function xe(t, e, i, a) {\n    o(this, xe);\n    var r = h(this, (xe.__proto__ || Object.getPrototypeOf(xe)).call(this));\n    return r.x = t, r.y = e, r.width = i, r.height = a, r;\n  }\n  r(ke, at), t(ke, [{\n    key: \"reset\",\n    value: function (t, e, i, a) {\n      this.imageData = t, this.x = P.initValue(e, 0), this.y = P.initValue(i, 0), this.d = P.initValue(a, 2), this.vectors = [], this.setVectors();\n    }\n  }, {\n    key: \"setVectors\",\n    value: function () {\n      for (var t = void 0, e = void 0, i = this.imageData.width, a = this.imageData.height, t = 0; t < i; t += this.d) for (e = 0; e < a; e += this.d) {\n        var r = 4 * ((e >> 0) * i + (t >> 0));\n        0 < this.imageData.data[3 + r] && this.vectors.push({\n          x: t + this.x,\n          y: e + this.y\n        });\n      }\n      return this.vector;\n    }\n  }, {\n    key: \"getBound\",\n    value: function (t, e) {\n      t = 4 * ((e >> 0) * this.imageData.width + (t >> 0));\n      return 0 < this.imageData.data[3 + t];\n    }\n  }, {\n    key: \"getPosition\",\n    value: function () {\n      var t = P.getRandFromArray(this.vectors);\n      return this.vector.copy(t);\n    }\n  }, {\n    key: \"getColor\",\n    value: function (t, e) {\n      t -= this.x;\n      t = 4 * (((e -= this.y) >> 0) * this.imageData.width + (t >> 0));\n      return {\n        r: this.imageData.data[t],\n        g: this.imageData.data[1 + t],\n        b: this.imageData.data[2 + t],\n        a: this.imageData.data[3 + t]\n      };\n    }\n  }, {\n    key: \"crossing\",\n    value: function (t) {\n      \"dead\" === this.crossType ? this.getBound(t.p.x - this.x, t.p.y - this.y) ? t.dead = !0 : t.dead = !1 : \"bound\" === this.crossType && (this.getBound(t.p.x - this.x, t.p.y - this.y) || t.v.negate());\n    }\n  }]), r = ke;\n  function ke(t, e, i, a) {\n    o(this, ke);\n    var r = h(this, (ke.__proto__ || Object.getPrototypeOf(ke)).call(this));\n    return r.reset(t, e, i, a), r;\n  }\n  t = {\n    addEventListener: function (t, e) {\n      t.addEventListener(\"PROTON_UPDATE_AFTER\", function () {\n        return e();\n      });\n    },\n    getStyle: function (t) {\n      t = H.hexToRgb(0 < arguments.length && void 0 !== t ? t : \"#ff0000\");\n      return \"rgba(\" + t.r + \", \" + t.g + \", \" + t.b + \", 0.5)\";\n    },\n    drawZone: function (t, e, i, a) {\n      var r = e.getContext(\"2d\"),\n        n = this.getStyle();\n      this.addEventListener(t, function () {\n        a && r.clearRect(0, 0, e.width, e.height), i instanceof nt ? (r.beginPath(), r.fillStyle = n, r.arc(i.x, i.y, 10, 0, 2 * Math.PI, !0), r.fill(), r.closePath()) : i instanceof ve ? (r.beginPath(), r.strokeStyle = n, r.moveTo(i.x1, i.y1), r.lineTo(i.x2, i.y2), r.stroke(), r.closePath()) : i instanceof _e ? (r.beginPath(), r.strokeStyle = n, r.drawRect(i.x, i.y, i.width, i.height), r.stroke(), r.closePath()) : i instanceof me && (r.beginPath(), r.strokeStyle = n, r.arc(i.x, i.y, i.radius, 0, 2 * Math.PI, !0), r.stroke(), r.closePath());\n      });\n    },\n    drawEmitter: function (t, e, i, a) {\n      var r = e.getContext(\"2d\"),\n        n = this.getStyle();\n      this.addEventListener(t, function () {\n        a && r.clearRect(0, 0, e.width, e.height), r.beginPath(), r.fillStyle = n, r.arc(i.p.x, i.p.y, 10, 0, 2 * Math.PI, !0), r.fill(), r.closePath();\n      });\n    }\n  };\n  return V.Particle = j, V.Pool = T, V.Util = P, V.ColorUtil = H, V.MathUtil = s, V.Vector2D = V.Vector = F, V.Polar2D = V.Polar = q, V.ArraySpan = Y, V.Rectangle = Z, V.Rate = K, V.ease = U, V.Span = l, V.Mat3 = X, V.getSpan = function (t, e, i) {\n    return new l(t, e, i);\n  }, V.createArraySpan = Y.createArraySpan, V.Initialize = V.Init = $, V.Life = V.L = et, V.Position = V.P = ot, V.Velocity = V.V = lt, V.Mass = V.M = ct, V.Radius = V.R = yt, V.Body = V.B = ft, V.Behaviour = gt, V.Force = V.F = bt, V.Attraction = V.A = xt, V.RandomDrift = V.RD = Pt, V.Gravity = V.G = At, V.Collision = Rt, V.CrossZone = wt, V.Alpha = St, V.Scale = V.S = Dt, V.Rotate = Mt, V.Color = Lt, V.Repulsion = Nt, V.Cyclone = zt, V.GravityWell = qt, V.Emitter = Yt, V.BehaviourEmitter = Zt, V.FollowEmitter = Kt, V.Zone = at, V.LineZone = ve, V.CircleZone = me, V.PointZone = nt, V.RectZone = _e, V.ImageZone = r, V.CanvasRenderer = ee, V.DomRenderer = ae, V.EaselRenderer = ne, V.PixiRenderer = ue, V.PixelRenderer = oe, V.WebGLRenderer = V.WebGlRenderer = C, V.CustomRenderer = $t, V.Debug = t, P.assign(V, U), V;\n});","map":{"version":3,"sources":["../src/math/MathUtil.js","../src/math/Span.js","../src/utils/WebGLUtil.js","../src/utils/DomUtil.js","../src/utils/ImgUtil.js","../src/utils/Util.js","../src/utils/Puid.js","../src/core/Pool.js","../src/debug/Stats.js","../src/events/EventDispatcher.js","../src/math/Integration.js","../src/core/Proton.js","../src/utils/Rgb.js","../src/math/ease.js","../src/math/Vector2D.js","../src/core/Particle.js","../src/utils/ColorUtil.js","../src/math/Polar2D.js","../src/math/Mat3.js","../src/math/ArraySpan.js","../src/math/Rectangle.js","../src/initialize/Rate.js","../src/initialize/Initialize.js","../src/initialize/Life.js","../src/zone/Zone.js","../src/zone/PointZone.js","../src/initialize/Position.js","../src/initialize/Velocity.js","../src/initialize/Mass.js","../src/initialize/Radius.js","../src/initialize/Body.js","../src/behaviour/Behaviour.js","../src/behaviour/Force.js","../src/behaviour/Attraction.js","../src/behaviour/RandomDrift.js","../src/behaviour/Gravity.js","../src/behaviour/Collision.js","../src/behaviour/CrossZone.js","../src/behaviour/Alpha.js","../src/behaviour/Scale.js","../src/behaviour/Rotate.js","../src/behaviour/Color.js","../src/behaviour/Cyclone.js","../src/behaviour/Repulsion.js","../src/behaviour/GravityWell.js","../src/initialize/InitializeUtil.js","../src/emitter/Emitter.js","../src/emitter/BehaviourEmitter.js","../src/emitter/FollowEmitter.js","../src/render/BaseRenderer.js","../src/render/CanvasRenderer.js","../src/render/DomRenderer.js","../src/render/EaselRenderer.js","../src/render/PixelRenderer.js","../src/render/PixiRenderer.js","../src/utils/MStack.js","../src/render/WebGLRenderer.js","../src/render/CustomRenderer.js","../src/zone/LineZone.js","../src/zone/CircleZone.js","../src/zone/RectZone.js","../src/zone/ImageZone.js","../src/debug/Debug.js","../src/index.js"],"names":["PI","Infinity","MathUtil","num","this","a","b","Math","random","floor","center","f","isInt","randomAToB","toString","slice","k","digits","pow","Span","Util","isArray","initValue","getRandFromArray","randomFloating","c","undefined","pan","getValue","length","i","tx","ty","angleInRadians","cos","s","sin","sx","sy","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","id","width","height","position","dom","document","createElement","style","opacity","transform","resize","marginLeft","marginTop","div","x","y","scale","rotate","willChange","css3","key","val","bkey","charAt","toUpperCase","substr","imgsCache","canvasCache","canvasId","context","image","rect","drawImage","imagedata","getImageData","clearRect","img","callback","param","src","Image","onload","e","target","WebGLUtil","canvas","DomUtil","createCanvas","getContext","value","defaults","Object","prototype","call","arr","obj","ignore","indexOf","constructor","args","bind","apply","concat","particle","conf","hasProp","p","v","copy","props","prop","hasOwnProperty","getSpanValue","ImgUtil","destroy","source","assign","idsMap","Puid","type","uid","getIdFromCache","_index","_cache","isBody","isInner","Pool","total","cache","params","__puid","getId","pop","createOrClone","getCache","push","create","classApply","clone","count","Stats","proton","container","emitterIndex","rendererIndex","body","add","emitter","getEmitter","renderer","getRenderer","str","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","getCount","pool","innerHTML","cssText","join","addEventListener","_this","bg","color","parentNode","appendChild","renderers","result","cpool","round","EventDispatcher","_listeners","dispatchEvent","hasEventListener","removeEventListener","removeAllEventListeners","listener","splice","listeners","handler","Integration","particles","time","damping","eulerIntegrate","sleep","old","multiplyScalar","mass","clear","Proton","USE_CLOCK","MEASURE","EULER","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","EMITTER_ADDED","EMITTER_REMOVED","PROTON_UPDATE","PROTON_UPDATE_AFTER","DEFAULT_INTERVAL","amendChangeTabsBug","integrationType","now","then","elapsed","stats","integrator","_fps","_interval","fps","render","init","index","remove","parent","Date","getTime","emittersUpdate","update","destroyAll","destroyOther","getAllParticles","Rgb","r","g","PI_2","sqrt","ease","easeLinear","Vector2D","atan2","w","addVectors","subVectors","set","divideScalar","distanceToSquared","tha","dx","dy","alpha","Particle","data","rgb","reset","setProp","N180_PI","life","age","dead","sprite","energy","radius","rotation","easing","emptyObject","removeAllBehaviours","applyBehaviours","max","applyBehaviour","behaviour","parents","initialize","addBehaviour","emptyArray","h","hex16","substring","parseInt","rbg","Number","Polar2D","abs","getX","getY","Mat3","mat3","mat","Float32Array","mat1","mat2","m","vec","ArraySpan","_arr","toArray","randomColor","Rectangle","bottom","right","Rate","numpan","timepan","numPan","setSpanValue","timePan","startTime","nextTime","Initialize","Life","lifePan","Zone","vector","crossType","alert","PointZone","error","Position","zone","getPosition","Velocity","rpan","thapan","rPan","thaPan","vr","polar2d","normalizeVelocity","PI_180","Mass","massPan","Radius","oldRadius","Body","imageTarget","Behaviour","getEasing","force","removeBehaviour","Force","fx","fy","normalizeForce","calculate","Attraction","targetPosition","normalizeValue","radiusSq","attractionForce","lengthSq","sub","normalize","RandomDrift","driftX","driftY","delay","panFoce","addXY","Gravity","Collision","collisionPool","delta","newPool","otherParticle","overlap","totalMass","averageMass1","averageMass2","distance","CrossZone","crossing","Alpha","same","alphaA","alphaB","Scale","scaleA","scaleB","Rotate","influence","rotationA","rotationB","getDirection","Color","createArraySpan","colorA","ColorUtil","hexToRgb","colorB","CHANGING","Cyclone","angle","setAngleAndForce","span","String","toLowerCase","cangle","cyclone","gradient","getGradient","Repulsion","GravityWell","centerPoint","distanceVec","distanceSq","factor","bindEmitter","setVectorVal","degreeTransform","Emitter","emitTime","totalTime","rate","stoped","isNaN","oldStoped","oldEmitTime","oldTotalTime","initAll","rest","initializer","arguments","emitting","integrate","dispatch","expire","event","bindEvent","createParticle","get","setupParticle","addBehaviours","stop","removeAllInitializers","removeEmitter","BehaviourEmitter","selfBehaviours","FollowEmitter","mouseTarget","window","_allowEmitting","initEventHandler","mousemoveHandler","_this2","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","layerX","layerY","offsetX","offsetY","babelHelpers.get","BaseRenderer","element","stroke","circleConf","isCircle","initHandler","thinkness","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","CanvasRenderer","bufferCache","addImg2Body","drawCircle","buffer","createBuffer","bufContext","globalAlpha","globalCompositeOperation","fillStyle","rgbToHex","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","fill","size","DomRenderer","createBody","transform3d","bodyReady","backgroundColor","removeChild","babelHelpers.typeof","createCircle","createSprite","createDiv","borderRadius","borderColor","borderWidth","url","backgroundImage","EaselRenderer","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","shape","Shape","PixelRenderer","rectangle","imageData","createImageData","putImageData","setPixel","elementwidth","PIXIClass","PixiRenderer","setColor","blendMode","setPIXI","PIXI","Sprite","createFromImage","from","fromImage","tint","getHex16FromParticle","anchor","endFill","MStack","mats","multiply","WebGLRenderer","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","umat","smat","mstack","viewport","circleCanvasURL","texturebuffers","A","B","fs","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","getShader","getFragmentShader","vertexShader","getVertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","idx","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","ids","unitI33","stripBuffer","raidus","circleCanvasRadius","toDataURL","_w","_h","_width","_height","_scaleX","_scaleY","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","drawImg2Canvas","updateMatrix","uniform3f","uniformMatrix3fv","top","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","moveOriginMatrix","translationMatrix","angel","rotationMatrix","scaleMatrix","matrix","inverse","CustomRenderer","LineZone","x1","y1","x2","y2","direction","minx","min","miny","maxx","maxy","dot","xxyy","getLength","tha2","oldx","oldy","rangeOut","getDistance","getSymmetric","CircleZone","PIx2","randomRadius","d","distanceTo","RectZone","ImageZone","vectors","setVectors","j","length1","length2","getBound","negate","func","getStyle","moveTo","lineTo","drawRect","Vector","Polar","getSpan","Init","L","P","V","M","R","F","RD","G","S","WebGlRenderer","Debug"],"mappings":"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","sourcesContent":["const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return Math.floor(Math.random() * (b - a)) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return (\n      \"#\" +\n      (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(\n        `proton_canvas_cache_${++canvasId}`,\n        width,\n        height\n      );\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import Span from \"../math/Span\";\nimport ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(\n        constructor,\n        [null].concat(args)\n      );\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  },\n\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return (\n      typeof obj === \"object\" &&\n      typeof target === \"object\" &&\n      obj.isInner &&\n      target.isInner\n    );\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter)\n          str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.initializes) +\n            \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.behaviours) +\n            \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n\n    target.prototype.hasEventListener =\n      EventDispatcher.prototype.hasEventListener;\n\n    target.prototype.addEventListener =\n      EventDispatcher.prototype.addEventListener;\n\n    target.prototype.removeEventListener =\n      EventDispatcher.prototype.removeEventListener;\n\n    target.prototype.removeAllEventListeners =\n      EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval =\n      fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = ''\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = {}\n\n  /** @type {object} */\n  data = {}\n\n  /** @type {Behaviour[]} */\n  behaviours = []\n\n  /** @type {Vector2D} */\n  p = []\n\n  /** @type {Vector2D} */\n  v = []\n\n  /** @type {Vector2D} */\n  a = []\n\n  /** @type {Rgb} */\n  rgb = {}\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && Util.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] &&\n        this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y)\n      return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from '../core/Proton';\nimport Util from '../utils/Util';\nimport ease from '../math/ease';\n\nexport default class Behaviour {\n    static id = 0;\n\n    /**\n     * The Behaviour class is the base for the other Behaviour\n     *\n     * @memberof! -\n     * @interface\n     * @alias Proton.Behaviour\n     *\n     * @param {Number} life \tthe behaviours life\n     * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n     *\n     * @property {String}  id \t\tThe behaviours id\n     * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n     * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n     * @property {Number}  age=0 \tHow long the particle should be 'alife'\n     * @property {Number}  energy=1\n     * @property {Boolean} dead=false The particle is dead at first\n     * @property {Array}   parents \tThe behaviour's parents array\n     * @property {String}  name \tThe behaviour name\n     */\n    constructor(life, easing) {\n\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n\n        this.age = 0;\n        this.energy = 1;\n        this.dead = false;\n        this.parents = [];\n\n        this.id = `Behaviour_${Behaviour.id++}`;\n        this.name = 'Behaviour';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} [life=Infinity] \t\tthis behaviour's life\n     * @param {String} [easing=easeLinear] \tthis behaviour's easing\n     */\n    reset(life, easing) {\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n    }\n\n    /**\n     * Normalize a force by 1:100;\n     *\n     * @method normalizeForce\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Vector2D} force\n     */\n    normalizeForce(force) {\n        return force.multiplyScalar(Proton.MEASURE);\n    }\n\n    /**\n     * Normalize a value by 1:100;\n     *\n     * @method normalizeValue\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} value\n     */\n    normalizeValue(value) {\n        return value * Proton.MEASURE;\n    }\n\n    /**\n     * Initialize the behaviour's parameters for all particles\n     *\n     * @method initialize\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     */\n    initialize(particle) {}\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} \t\t\ttime the integrate time 1/ms\n     * @param {Int} \t\t\tindex the particle index\n     */\n    calculate(particle, time, index) {\n        this.age += time;\n\n        if (this.age >= this.life || this.dead) {\n            this.energy = 0;\n            this.dead = true;\n            this.destroy();\n        } else {\n            const scale = this.easing(particle.age / particle.life);\n            this.energy = Math.max(1 - scale, 0);\n        }\n    }\n\n    /**\n     * Destory this behaviour\n     *\n     * @method destroy\n     * @memberof Proton.Behaviour\n     * @instance\n     */\n    destroy() {\n        let i = this.parents.length;\n        while (i--) {\n            this.parents[i].removeBehaviour(this);\n        }\n\n        this.parents.length = 0;\n    }\n}\n","import Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Force extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Force\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(fx, fy, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\t\tthis.name = 'Force';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(fx, fy, life, easing) {\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.a.add(this.force);\n\t}\n}","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from './Force';\n\nexport default class Gravity extends Force {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Force\n\t * @constructor\n\t * @alias Proton.Gravity\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(g, life, easing) {\n\t\tsuper(0, g, life, easing);\n\t\tthis.name = 'Gravity';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Gravity\n\t * @instance\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(g, life, easing) {\n\t\tsuper.reset(0, g, life, easing);\n\t}\n}","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Collision extends Behaviour {\n\n\t/**\n\t * The callback after collision\n\t *\n\t * @callback Callback\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Proton.Paritcle} otherParticle\n\t */\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Collision\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(emitter, mass, callback, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(emitter, mass, callback);\n\t\tthis.name = 'Collision';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method reset\n\t * @instance\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(emitter, mass, callback, life, easing) {\n\t\tthis.emitter = Util.initValue(emitter, null);\n\t\tthis.mass = Util.initValue(mass, true);\n\t\tthis.callback = Util.initValue(callback, null);\n\n\t\tthis.collisionPool = [];\n\t\tthis.delta = new Vector2D();\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method applyBehaviour\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tconst newPool = this.emitter ? this.emitter.particles.slice(index) : this.pool.slice(index);\n\t\tconst length = newPool.length;\n\n\t\tlet otherParticle;\n\t\tlet lengthSq;\n\t\tlet overlap;\n\t\tlet totalMass;\n\t\tlet averageMass1, averageMass2;\n\t\tlet i;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\totherParticle = newPool[i];\n\n\t\t\tif (otherParticle !== particle) {\n\t\t\t\tthis.delta.copy(otherParticle.p);\n\t\t\t\tthis.delta.sub(particle.p);\n\n\t\t\t\tlengthSq = this.delta.lengthSq();\n\t\t\t\tconst distance = particle.radius + otherParticle.radius;\n\n\t\t\t\tif (lengthSq <= distance * distance) {\n\t\t\t\t\toverlap = distance - Math.sqrt(lengthSq);\n\t\t\t\t\toverlap += 0.5;\n\n\t\t\t\t\ttotalMass = particle.mass + otherParticle.mass;\n\t\t\t\t\taverageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n\t\t\t\t\taverageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n\t\t\t\t\tparticle.p.add(this.delta.clone().normalize().multiplyScalar(overlap * -averageMass1));\n\t\t\t\t\totherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n\t\t\t\t\tthis.callback && this.callback(particle, otherParticle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class CrossZone extends Behaviour {\n\n    /**\n     * Defines what happens if the particles come to the end of the specified zone\n     *\n     * @memberof! Proton#\n     * @augments Proton.Behaviour\n     * @constructor\n     * @alias Proton.CrossZone\n     *\n     * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n     * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n     *\n     * @property {String} name The Behaviour name\n     */\n    constructor(zone, crossType, life, easing) {\n        super(life, easing);\n\n        this.reset(zone, crossType);\n        this.name = 'CrossZone';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n     * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n     */\n    reset(zone, crossType, life, easing) {\n        this.zone = zone;\n        this.zone.crossType = Util.initValue(crossType, 'dead');\n\n        life && super.reset(life, easing);\n    }\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} the integrate time 1/ms\n     * @param {Int} the particle index\n     */\n    applyBehaviour(particle, time, index) {\n        this.calculate(particle, time, index);\n        this.zone.crossing(particle);\n    };\n}","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha =\n      particle.data.alphaB +\n      (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Scale extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Scale\n\t *\n\t * @todo add description for 'a' and 'b'\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(a, b, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(a, b);\n\t\tthis.name = 'Scale';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 1));\n\t\tthis.b = Span.setSpanValue(b);\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.data.scaleA = this.a.getValue();\n\t\tparticle.data.oldRadius = particle.radius;\n\t\tparticle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n\t\tif (particle.scale < 0.0001) particle.scale = 0;\n\t\tparticle.radius = particle.data.oldRadius * particle.scale;\n\t}\n}","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Rotate extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Rotate\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} [influence=Velocity] The rotation's influence\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(influence, b, style, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(influence, b, style);\n\t\tthis.name = 'Rotate';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} a\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, style, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 'Velocity'));\n\t\tthis.b = Span.setSpanValue(Util.initValue(b, 0));\n\t\tthis.style = Util.initValue(style, 'to');\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.rotation = this.a.getValue();\n\t\tparticle.data.rotationA = this.a.getValue();\n\n\t\tif (!this.same) particle.data.rotationB = this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\n\t\tif (!this.same) {\n\t\t\tif (this.style === 'to' || this.style === 'TO' || this.style === '_') {\n\t\t\t\tparticle.rotation += particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy\n\t\t\t} else {\n\t\t\t\tparticle.rotation += particle.data.rotationB;\n\t\t\t}\n\t\t} else if (this.a.a === 'V' || this.a.a === 'Velocity' || this.a.a === 'v') {\n\t\t\t// beta...\n\t\t\tparticle.rotation = particle.getDirection();\n\t\t}\n\t}\n\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r =\n        particle.data.colorB.r +\n        (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g =\n        particle.data.colorB.g +\n        (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b =\n        particle.data.colorB.b +\n        (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = Math.floor(particle.rgb.r);\n      particle.rgb.g = Math.floor(particle.rgb.g);\n      particle.rgb.b = Math.floor(particle.rgb.b);\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from './Attraction';\n\nexport default class Repulsion extends Attraction {\n\n\t/**\n\t * The oppisite of Proton.Attraction - turns the force\n\t *\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Attraction\n\t * @constructor\n\t * @alias Proton.Repulsion\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {Number} force\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(targetPosition, force, radius, life, easing) {\n\t\tsuper(targetPosition, force, radius, life, easing);\n\n\t\tthis.force *= -1;\n\t\tthis.name = 'Repulsion';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Repulsion\n\t * @instance\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(targetPosition, force, radius, life, easing) {\n\t\tsuper.reset(targetPosition, force, radius, life, easing);\n\t\tthis.force *= -1;\n\t}\n}\n","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class GravityWell extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Behaviour\n\t * @constructor\n\t * @alias GravityWell\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(centerPoint, force, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tthis.name = 'GravityWell';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t */\n\treset(centerPoint, force, life, easing) {\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tlife && super.reset(life, easing);\n\t};\n\n\t/**\n\t * @inheritdoc\n\t */\n\tinitialize(particle) {\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n\t\tconst distanceSq = this.distanceVec.lengthSq();\n\n\t\tif (distanceSq !== 0) {\n\t\t\tconst distance = this.distanceVec.length();\n\t\t\tconst factor = (this.force * time) / (distanceSq * distance);\n\n\t\t\tparticle.v.x += factor * this.distanceVec.x;\n\t\t\tparticle.v.y += factor * this.distanceVec.y;\n\t\t}\n\t}\n}","import Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    Util.setProp(particle, initialize);\n    Util.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n\n    this.mouseTarget.addEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n    constructor(element, stroke) {\n        this.pool = new Pool();\n        this.element = element;\n        this.stroke = stroke;\n        this.circleConf = { isCircle: true };\n\n        this.initHandler();\n        this.name = \"BaseRenderer\";\n    }\n\n    setStroke(color = \"#000000\", thinkness = 1) {\n        this.stroke = { color, thinkness };\n    }\n\n    initHandler() {\n        this._protonUpdateHandler = () => {\n            this.onProtonUpdate.call(this);\n        };\n\n        this._protonUpdateAfterHandler = () => {\n            this.onProtonUpdateAfter.call(this);\n        };\n\n        this._emitterAddedHandler = emitter => {\n            this.onEmitterAdded.call(this, emitter);\n        };\n\n        this._emitterRemovedHandler = emitter => {\n            this.onEmitterRemoved.call(this, emitter);\n        };\n\n        this._particleCreatedHandler = particle => {\n            this.onParticleCreated.call(this, particle);\n        };\n\n        this._particleUpdateHandler = particle => {\n            this.onParticleUpdate.call(this, particle);\n        };\n\n        this._particleDeadHandler = particle => {\n            this.onParticleDead.call(this, particle);\n        };\n    }\n\n    init(proton) {\n        this.parent = proton;\n\n        proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n        proton.addEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n        proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n        proton.addEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n        proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n\n    resize(width, height) {}\n\n    destroy() {\n        this.remove();\n    }\n\n    remove(proton) {\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE\",\n            this._protonUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        this.parent.removeEventListener(\n            \"EMITTER_ADDED\",\n            this._emitterAddedHandler\n        );\n        this.parent.removeEventListener(\n            \"EMITTER_REMOVED\",\n            this._emitterRemovedHandler\n        );\n\n        this.parent.removeEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_UPDATE\",\n            this._particleUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_DEAD\",\n            this._particleDeadHandler\n        );\n\n        this.parent = null;\n    }\n\n    onProtonUpdate() {}\n    onProtonUpdateAfter() {}\n\n    onEmitterAdded(emitter) {}\n    onEmitterRemoved(emitter) {}\n\n    onParticleCreated(particle) {}\n    onParticleUpdate(particle) {}\n    onParticleDead(particle) {}\n}\n","import ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n    constructor(element) {\n        super(element);\n\n        this.stroke = null;\n        this.context = this.element.getContext(\"2d\");\n        this.bufferCache = {};\n        this.name = \"CanvasRenderer\";\n    }\n\n    resize(width, height) {\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    onProtonUpdate() {\n        this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n\n    onParticleCreated(particle) {\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            particle.color = particle.color || \"#ff0000\";\n        }\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.body) {\n            if (particle.body instanceof Image) this.drawImage(particle);\n        } else {\n            this.drawCircle(particle);\n        }\n    }\n\n    onParticleDead(particle) {\n        particle.body = null;\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        particle.body = img;\n    }\n\n    // private drawCircle\n    drawImage(particle) {\n        const w = (particle.body.width * particle.scale) | 0;\n        const h = (particle.body.height * particle.scale) | 0;\n        const x = particle.p.x - w / 2;\n        const y = particle.p.y - h / 2;\n\n        if (!!particle.color) {\n            if (!particle.data[\"buffer\"])\n                particle.data.buffer = this.createBuffer(particle.body);\n\n            const bufContext = particle.data.buffer.getContext(\"2d\");\n            bufContext.clearRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalAlpha = particle.alpha;\n            bufContext.drawImage(particle.body, 0, 0);\n\n            bufContext.globalCompositeOperation = \"source-atop\";\n            bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n            bufContext.fillRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalCompositeOperation = \"source-over\";\n            bufContext.globalAlpha = 1;\n\n            this.context.drawImage(\n                particle.data.buffer,\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height,\n                x,\n                y,\n                w,\n                h\n            );\n        } else {\n            this.context.save();\n\n            this.context.globalAlpha = particle.alpha;\n            this.context.translate(particle.p.x, particle.p.y);\n            this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n            this.context.translate(-particle.p.x, -particle.p.y);\n            this.context.drawImage(\n                particle.body,\n                0,\n                0,\n                particle.body.width,\n                particle.body.height,\n                x,\n                y,\n                w,\n                h\n            );\n\n            this.context.globalAlpha = 1;\n            this.context.restore();\n        }\n    }\n\n    // private drawCircle --\n    drawCircle(particle) {\n        if (particle.rgb) {\n            this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n        } else {\n            this.context.fillStyle = particle.color;\n        }\n\n        // draw circle\n        this.context.beginPath();\n        this.context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n        );\n\n        if (this.stroke) {\n            this.context.strokeStyle = this.stroke.color;\n            this.context.lineWidth = this.stroke.thinkness;\n            this.context.stroke();\n        }\n\n        this.context.closePath();\n        this.context.fill();\n    }\n\n    // private createBuffer\n    createBuffer(image) {\n        if (image instanceof Image) {\n            const size = image.width + \"_\" + image.height;\n            let canvas = this.bufferCache[size];\n\n            if (!canvas) {\n                canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                this.bufferCache[size] = canvas;\n            }\n\n            return canvas;\n        }\n    }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.transform3d = false;\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d)\n        DomUtil.transform3d(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n      else\n        DomUtil.transform(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n\n      particle.body.style.opacity = particle.alpha;\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return (\n      typeof particle.body === \"object\" &&\n      particle.body &&\n      !particle.body.isInner\n    );\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body, particle);\n  }\n\n  // private --\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      2 * particle.radius,\n      2 * particle.radius\n    );\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      body.width,\n      body.height\n    );\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (this.stroke instanceof String) graphics.beginStroke(this.stroke);\n      else graphics.beginStroke(\"#000000\");\n    }\n    graphics\n      .beginFill(particle.color || \"#ff0000\")\n      .drawCircle(0, 0, particle.radius);\n\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle\n      ? rectangle\n      : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        Math.floor(particle.p.x - this.rectangle.x),\n        Math.floor(particle.p.y - this.rectangle.y),\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.elementwidth)\n      return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage =\n        PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  destroy(particles) {\n    super.destroy();\n    this.pool.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner\n      ? this.createFromImage(body.src)\n      : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = this.stroke instanceof String ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++)\n      this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from '../math/Mat3';\nimport BaseRenderer from './BaseRenderer';\n\nimport Util from '../utils/Util';\nimport ImgUtil from '../utils/ImgUtil';\nimport MStack from '../utils/MStack';\nimport DomUtil from '../utils/DomUtil';\nimport WebGLUtil from '../utils/WebGLUtil';\nimport MathUtil from '../math/MathUtil';\n\nexport default class WebGLRenderer extends BaseRenderer {\n\n    constructor(element) {\n        super(element);\n\n        this.gl = this.element.getContext('experimental-webgl', { antialias: true, stencil: false, depth: false });\n        if (!this.gl) alert('Sorry your browser do not suppest WebGL!');\n\n        this.initVar();\n        this.setMaxRadius();\n        this.initShaders();\n        this.initBuffers();\n\n        this.gl.blendEquation(this.gl.FUNC_ADD);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        this.gl.enable(this.gl.BLEND);\n\n        this.addImg2Body = this.addImg2Body.bind(this);\n\n        this.name = 'WebGLRenderer';\n    }\n\n    init(proton) {\n        super.init(proton);\n        this.resize(this.element.width, this.element.height);\n    }\n\n    resize(width, height) {\n        this.umat[4] = -2;\n        this.umat[7] = 1;\n\n        this.smat[0] = 1 / width;\n        this.smat[4] = 1 / height;\n\n        this.mstack.set(this.umat, 0);\n        this.mstack.set(this.smat, 1);\n\n        this.gl.viewport(0, 0, width, height);\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    setMaxRadius(radius) {\n        this.circleCanvasURL = this.createCircle(radius);\n    }\n\n    getVertexShader() {\n        const vsSource = ['uniform vec2 viewport;', 'attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 tMat;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'void main() {', 'vec3 v = tMat * vec3(aVertexPosition, 1.0);', 'gl_Position = vec4(v.x, v.y, 0, 1);', 'vTextureCoord = aTextureCoord;', 'alpha = tMat[0][2];', '}'].join('\\n');\n        return vsSource;\n    }\n\n    getFragmentShader() {\n        const fsSource = ['precision mediump float;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'uniform sampler2D uSampler;', 'uniform vec4 color;', 'uniform bool useTexture;', 'uniform vec3 uColor;', 'void main() {', 'vec4 textureColor = texture2D(uSampler, vTextureCoord);', 'gl_FragColor = textureColor * vec4(uColor, 1.0);', 'gl_FragColor.w *= alpha;', '}'].join('\\n');\n        return fsSource;\n    }\n\n    initVar() {\n        this.mstack = new MStack();\n        this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n        this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n        this.texturebuffers = {};\n    }\n\n    blendEquation(A) {\n        this.gl.blendEquation(this.gl[A]);\n    }\n\n    blendFunc(A, B) {\n        this.gl.blendFunc(this.gl[A], this.gl[B]);\n    }\n\n    getShader(gl, str, fs) {\n        const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n\n    initShaders() {\n        const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n        const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n        this.sprogram = this.gl.createProgram();\n        this.gl.attachShader(this.sprogram, vertexShader);\n        this.gl.attachShader(this.sprogram, fragmentShader);\n        this.gl.linkProgram(this.sprogram);\n\n        if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS))\n            alert('Could not initialise shaders');\n\n        this.gl.useProgram(this.sprogram);\n        this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, 'aVertexPosition');\n        this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, 'aTextureCoord');\n        this.gl.enableVertexAttribArray(this.sprogram.tca);\n        this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n        this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, 'tMat');\n        this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, 'uSampler');\n        this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, 'useTexture');\n        this.sprogram.color = this.gl.getUniformLocation(this.sprogram, 'uColor');\n        this.gl.uniform1i(this.sprogram.useTex, 1);\n    };\n\n    initBuffers() {\n        const vs = [0, 3, 1, 0, 2, 3];\n        let idx;\n\n        this.unitIBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n        let i;\n        let ids = [];\n        for (i = 0; i < 100; i++) ids.push(i);\n        idx = new Uint16Array(ids);\n\n        this.unitI33 = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n        ids = [];\n        for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n        idx = new Uint16Array(ids);\n\n        this.stripBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n    };\n\n    createCircle(raidus) {\n        this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n        const canvas = DomUtil.createCanvas('circle_canvas', this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n        const context = canvas.getContext('2d');\n\n        context.beginPath();\n        context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fillStyle = '#FFF';\n        context.fill();\n\n        return canvas.toDataURL();\n    };\n\n    drawImg2Canvas(particle) {\n        const _w = particle.body.width;\n        const _h = particle.body.height;\n\n        const _width = WebGLUtil.nhpot(particle.body.width);\n        const _height = WebGLUtil.nhpot(particle.body.height);\n\n        const _scaleX = particle.body.width / _width;\n        const _scaleY = particle.body.height / _height;\n\n        if (!this.texturebuffers[particle.data.src])\n            this.texturebuffers[particle.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()];\n\n        particle.data.texture = this.texturebuffers[particle.data.src][0];\n        particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n        particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]), this.gl.STATIC_DRAW);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]), this.gl.STATIC_DRAW);\n\n        const context = particle.data.canvas.getContext('2d');\n        const data = context.getImageData(0, 0, _width, _height);\n\n        this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n        this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n        particle.data.textureLoaded = true;\n        particle.data.textureWidth = _w;\n        particle.data.textureHeight = _h;\n    }\n\n    onProtonUpdate() {\n        // this.gl.clearColor(0, 0, 0, 1);\n        // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n\n    onParticleCreated(particle) {\n        particle.data.textureLoaded = false;\n        particle.data.tmat = Mat3.create();\n        particle.data.tmat[8] = 1;\n        particle.data.imat = Mat3.create();\n        particle.data.imat[8] = 1;\n\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n            particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n        }\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        if (particle.dead) return;\n        particle.body = img;\n        particle.data.src = img.src;\n        particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n        particle.data.oldScale = 1;\n\n        this.drawImg2Canvas(particle);\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.data.textureLoaded) {\n            this.updateMatrix(particle);\n\n            this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n            this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n            this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n\n            this.mstack.pop();\n        }\n    }\n\n    onParticleDead(particle) { }\n\n    updateMatrix(particle) {\n        const moveOriginMatrix = WebGLUtil.makeTranslation(-particle.data.textureWidth / 2, -particle.data.textureHeight / 2);\n        const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n        const angel = particle.rotation * (MathUtil.PI_180);\n        const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n        const scale = particle.scale * particle.data.oldScale;\n        const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n        let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n        matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n        matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n        Mat3.inverse(matrix, particle.data.imat);\n        matrix[2] = particle.alpha;\n\n        this.mstack.push(matrix);\n    }\n}","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n\n    this.vector.x =\n      this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y =\n      this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (\n        this.direction === \">\" ||\n        this.direction === \"R\" ||\n        this.direction === \"right\" ||\n        this.direction === \"down\"\n      ) {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y))\n          particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    let tha2 = particle.v.getGradient();\n    let tha1 = this.getGradient(particle);\n\n    let tha = 2 * (tha1 - tha2);\n    let oldx = particle.v.x;\n    let oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return (\n      -MathUtil.PI_2 +\n      Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x)\n    );\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width)\n        particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height)\n        particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0)\n        particle.p.x = this.x + this.width + particle.radius;\n      else if (\n        particle.p.x - particle.radius > this.x + this.width &&\n        particle.v.x >= 0\n      )\n        particle.p.x = this.x - particle.radius;\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0)\n        particle.p.y = this.y + this.height + particle.radius;\n      else if (\n        particle.p.y - particle.radius > this.y + this.height &&\n        particle.v.y >= 0\n      )\n        particle.p.y = this.y - particle.radius;\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    var index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    var i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.v.negate();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n"]},"metadata":{},"sourceType":"script"}